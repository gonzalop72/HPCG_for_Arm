Fujitsu C/C++ Version 4.7.0   Thu Feb  9 07:10:57 2023
Compilation information
  Current directory : /lustre/home/gapinzon/arm_code/HPCG_for_Arm/ookami_fj2
  Source file       : ../src/OptimizeProblem.cpp
(line-no.)(optimize)
        1             /*
        2              *
        3              *  SPDX-License-Identifier: Apache-2.0
        4              *
        5              *  Copyright (C) 2019, Arm Limited and contributors
        6              *
        7              *  Licensed under the Apache License, Version 2.0 (the "License");
        8              *  you may not use this file except in compliance with the License.
        9              *  You may obtain a copy of the License at
       10              *
       11              *      http://www.apache.org/licenses/LICENSE-2.0
       12              *
       13              *  Unless required by applicable law or agreed to in writing, software
       14              *  distributed under the License is distributed on an "AS IS" BASIS,
       15              *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       16              *  See the License for the specific language governing permissions and
       17              *  limitations under the License.
       18              *
       19              */
       20             
       21             
       22             //@HEADER
       23             // ***************************************************
       24             //
       25             // HPCG: High Performance Conjugate Gradient Benchmark
       26             //
       27             // Contact:
       28             // Michael A. Heroux ( maherou@sandia.gov)
       29             // Jack Dongarra     (dongarra@eecs.utk.edu)
       30             // Piotr Luszczek    (luszczek@eecs.utk.edu)
       31             //
       32             // ***************************************************
       33             //@HEADER
       34             
       35             /*!
       36               @file OptimizeProblem.cpp
       37             
       38               HPCG routine
       39               */
       40             
       41             #include "OptimizeProblem.hpp"
       42             #ifdef HPCG_USE_ARMPL_SPMV
       43             #include "armpl_sparse.h"
       44             #endif
       45             
       46             #ifdef PRINT_TDG_GRAPH
       47             #include "print_matrix/PrintMatrix.cpp"
       48             #endif
       49             
       50             #define MAN_OPTIMAL_SPMV_STRUCTURE
       51             //√ç#define TEST_REORG 
       52             #ifdef TEST_REORG
       53             
       54             //#include <fstream>
       55             //#include "hpcg.hpp"
       56             
       57             #include <list>
       58             std::vector<local_int_t> mutate_list(std::vector<local_int_t>& listRef);
       59             std::vector<local_int_t> mutate_list2(std::vector<local_int_t>& listRef);
       60             #endif
       61             
       62             /*!
       63               Optimizes the data structures used for CG iteration to increase the
       64               performance of the benchmark version of the preconditioned CG algorithm.
       65             
       66               @param[inout] A      The known system matrix, also contains the MG hierarchy in attributes Ac and mgData.
       67             
       68               @return returns 0 upon success and non-zero otherwise
       69             
       70               @see GenerateGeometry
       71               @see GenerateProblem
       72               */
       73             int OptimizeCoarseProblem(SparseMatrix & A) {
       74             
       75             	const local_int_t nrow = A.localNumberOfRows;
       76             
       77             	// On the coarse grids we use block coloring algorithm
       78             	A.TDG = false;
       79             
       80             	local_int_t nyPerBlock = 1; // i.e., how many whole-NX is a block
       81             	A.blockSize = A.geom->nx * nyPerBlock;
       82             
       83             	// How many blocks we found in each direction?
       84             	local_int_t blocksInX = 1; // at least, one block has NX rows
       85             	local_int_t blocksInY = A.geom->ny / nyPerBlock;
       86             	local_int_t blocksInZ = A.geom->nz; // blocks cannot contain rows from different X-Y planes
       87             
       88             	local_int_t numberOfBlocks = nrow / A.blockSize;
       89             	A.numberOfBlocks = numberOfBlocks;
       90             
       91             	// Our target is to have two colors per each X-Y plane
       92             	// If not possible, then we will repeat colors at some point
       93             	local_int_t targetNumberOfColors = 2*A.geom->nz;
       94             	if ( A.numberOfBlocks % targetNumberOfColors != 0 ) {
       95             		targetNumberOfColors = A.geom->nz;
       96             	}
       97             
       98             	local_int_t blocksPerColor = A.numberOfBlocks / targetNumberOfColors;
       99             
      100             	// Find a good chunkSize
      101             	if ( blocksPerColor % 4 == 0 ) {
      102             		A.chunkSize = 4;
      103             	} else if ( blocksPerColor % 2 == 0 ) {
      104             		A.chunkSize = 2;
      105             	} else {
      106             		A.chunkSize = 1;
      107             	}
      108             
      109             	assert( blocksPerColor % A.chunkSize == 0);
      110             	assert(A.numberOfBlocks % A.chunkSize == 0);
      111             	assert(targetNumberOfColors % 2 == 0);
      112             
      113    i        	A.firstRowOfBlock = std::vector<local_int_t>(numberOfBlocks);
      114          s  	for ( local_int_t i = 0, ii = 0; i < nrow; i+= A.blockSize, ii++ ) {
      115    i     s  		A.firstRowOfBlock[ii] = i;
      116          s  	}
      117             
      118             	// Create an adjacency matrix for the blocked grid
      119             	local_int_t **blockIndices = new local_int_t*[numberOfBlocks];
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
      120             	for ( local_int_t i = 0; i < numberOfBlocks; i++ ) {
      121             		blockIndices[i] = new local_int_t[27];
      122             	}
      123             	local_int_t *nonzerosInBlock = new local_int_t[numberOfBlocks];
      124             	for ( local_int_t z = 0; z < blocksInZ; z++ ) {
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
      125             		for ( local_int_t y = 0; y < blocksInY; y++ ) {
      126             			for ( local_int_t x = 0; x < blocksInX; x++ ) {
      127             				local_int_t curBlock = x + y*blocksInX + z*blocksInX*blocksInY;
      128             				local_int_t *ptr = blockIndices[curBlock];
      129             				local_int_t nnzInBlock = 0;
      130             
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    FULL UNROLLING
                       <<< Loop-information  End >>>
      131         f   				for ( int zz = -1; zz <= 1; zz++ ) {
      132         f   					if ( z+zz >= 0 && z+zz < blocksInZ ) {
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    FULL UNROLLING
                       <<< Loop-information  End >>>
      133         f   						for ( int yy = -1; yy <= 1; yy++ ) {
      134         f   							if ( y+yy >= 0 && y+yy < blocksInY ) {
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    FULL UNROLLING
                       <<< Loop-information  End >>>
      135         fs  								for ( int xx = -1; xx <= 1; xx++ ) {
      136         fv  									if ( x+xx >= 0 && x+xx < blocksInX ) {
      137         fv  										local_int_t colBlock = curBlock + xx + yy*blocksInX + zz*blocksInX*blocksInY;
      138         fs  										*ptr++ = colBlock;
      139         fm  										nnzInBlock++;
      140         fv  									}
      141         fv  								}
      142         f   							}
      143         f   						}
      144         f   					}
      145         f   				}
      146             				nonzerosInBlock[curBlock] = nnzInBlock;
      147             			}
      148             		}
      149             	}
      150             
      151             	// We can start coloring
      152             	std::vector<local_int_t> colors(numberOfBlocks, numberOfBlocks); // `numberOfBlocks` means uninitialized
      153             	local_int_t totalColors = 1;
      154    i        	colors[0] = 0; // first block gets color 0
      155             
      156             	for ( local_int_t i = 1; i < numberOfBlocks; i++ ) {
      157    i        		if ( colors[i] == numberOfBlocks ) { // if color is not assigned to this block
      158             			std::vector<local_int_t> assigned(totalColors, 0);
      159             			local_int_t currentlyAssigned = 0;
      160             			const local_int_t * const currentColIndices = blockIndices[i];
      161             			const int nnz = nonzerosInBlock[i];
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
      162             			for ( local_int_t j = 0; j < nnz; j++ ) {
      163             				local_int_t curCol = currentColIndices[j];
      164             				if ( curCol < i ) { // points beyond i are unassigned, don't about before i
      165    i        					if ( assigned[colors[curCol]] == 0 ) {
      166             						currentlyAssigned++;
      167             					}
      168    i        					assigned[colors[curCol]] = 1;
      169             				} else {
      170             					break; // indices sorted, we can break
      171             				}
      172             			}
      173             			if ( currentlyAssigned < totalColors ) { // if there is at least one color left to use
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
      174             				for ( local_int_t j = 0; j < totalColors; j++ ) {
      175    i        					if ( assigned[j] == 0 ) { // no neighbour block has this color
      176    i        						colors[i] = j;
      177             						break;
      178             					}
      179             				}
      180             			} else { // all colors assigned, create a new one and assign it
      181    i        				colors[i] = totalColors++;
      182             			}
      183             		}
      184             	}
      185             
      186             	// Increment the number of colors by changing the colors of some rows
      187             	if ( totalColors < targetNumberOfColors ) {
      188             		local_int_t colorIncrement = targetNumberOfColors - totalColors;
      189             		for ( local_int_t i = 0; i < numberOfBlocks; i += 2*blocksInX*blocksInY ) {
      190             			colorIncrement = colorIncrement == (targetNumberOfColors - totalColors) ? 0 : colorIncrement + 4;
      191         2   			for ( local_int_t ii = i; ii < i + 2*blocksInX*blocksInY; ii++ ) {
      192    i    2   				colors[ii] += colorIncrement;
      193         2   			}
      194             		}
      195             		totalColors = targetNumberOfColors;
      196             	}
      197             	A.numberOfColors = totalColors;
      198             
      199             	std::vector<std::vector<local_int_t> > blocksInColor(totalColors);
      200             	for ( local_int_t i = 0; i < numberOfBlocks; i++ ) {
      201    i        		blocksInColor[colors[i]].push_back(i);
      202             	}
      203             
      204    i        	A.numberOfBlocksInColor = std::vector<local_int_t>(totalColors);
      205         2   	for ( local_int_t c = 0; c < totalColors; c++ ) {
      206    i    2   		A.numberOfBlocksInColor[c] = blocksInColor[c].size();
      207         2   	}
      208             
      209             	// Allocate memory for temporary data structures
      210             	double **matrixValues = new double*[nrow];
      211             	local_int_t **mtxIndL = new local_int_t*[nrow];
      212             	unsigned char *nonzerosInRow = new unsigned char[nrow];
      213             	for ( local_int_t i = 0; i < nrow; i++ ) {
      214             		matrixValues[i] = new double[27];
      215             		mtxIndL[i] = new local_int_t[27];
      216             	}
      217             
      218             	// Populate new data structures. Also, merge blocks now
      219             	// We will create the translation vectors on the fly as well
      220    i        	A.whichOldRowIsNewRow = std::vector<local_int_t>(A.localNumberOfColumns);
      221    i        	A.whichNewRowIsOldRow = std::vector<local_int_t>(A.localNumberOfColumns);
      222             	local_int_t ptr = 0;
      223             	for ( local_int_t color = 0; color < totalColors; color++ ) {
      224    i        		for ( local_int_t block = 0; block < blocksInColor[color].size(); block += A.chunkSize ) {
      225             			for ( local_int_t i = 0; i < A.blockSize; i++ ) {
      226             				for ( local_int_t b = 0; b < A.chunkSize; b++ ) {
      227             					local_int_t curBlock = blocksInColor[color][block+b];
      228             					local_int_t firstRow = A.firstRowOfBlock[curBlock];
      229             					local_int_t curRow = firstRow + i;
      230             
      231             					for ( local_int_t j = 0; j < A.nonzerosInRow[curRow]; j++ ) {
      232             						matrixValues[ptr][j] = A.matrixValues[curRow][j];
      233             						mtxIndL[ptr][j] = A.mtxIndL[curRow][j];
      234             					}
      235             					nonzerosInRow[ptr] = A.nonzerosInRow[curRow];
      236    i        					A.whichOldRowIsNewRow[ptr] = curRow;
      237    i        					A.whichNewRowIsOldRow[curRow] = ptr++;
      238             				}
      239             			}
      240    i        		}
      241             	}
      242             	// External rows are not reordered so they keep the same ID
      243             	for ( local_int_t i = nrow; i < A.localNumberOfColumns; i++ ) {
      244    i        		A.whichOldRowIsNewRow[i] = i;
      245    i        		A.whichNewRowIsOldRow[i] = i;
      246             	}
      247             
      248             	// Scan the grid to discover the amount of nonzeros per chunk
      249             	// We already consider the new order
      250             	A.numberOfChunks = nrow / A.chunkSize;
      251    i        	A.nonzerosInChunk = std::vector<local_int_t>(A.numberOfChunks, 0);
      252             	for ( local_int_t i = 0; i < nrow; i+= A.chunkSize ) {
      253             		local_int_t curChunk = i / A.chunkSize;
      254    i        		A.nonzerosInChunk[curChunk] = nonzerosInRow[i];
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
      255             		for ( local_int_t ii = i+1; ii < i+A.chunkSize; ii++ ) {
      256    i        			A.nonzerosInChunk[curChunk] = A.nonzerosInChunk[curChunk] < nonzerosInRow[ii] ? nonzerosInRow[ii] : A.nonzerosInChunk[curChunk];
      257             		}
      258             	}
      259             
      260             	// Translate indices
      261             	for ( local_int_t c = 0; c < A.numberOfChunks; c++ ) {
      262             		for ( local_int_t i = 0; i < A.chunkSize; i++ ) {
      263             			local_int_t curRow = c * A.chunkSize + i;
      264             			for ( local_int_t j = 0; j < nonzerosInRow[curRow]; j++ ) {
      265             				local_int_t curCol = mtxIndL[curRow][j];
      266    i        				mtxIndL[curRow][j] = A.whichNewRowIsOldRow[curCol];
      267             			}
      268             		}
      269             	}
      270             
      271             	// Make sure the values from nonzerosInRow->nonzerosInChunk are actually 0
      272             	for ( local_int_t i = 0; i < nrow; i++ ) {
      273             		local_int_t curChunk = i / A.chunkSize;
      274             
      275    i     s  		for ( local_int_t j = nonzerosInRow[i]; j < A.nonzerosInChunk[curChunk]; j++ ) {
      276          s  			matrixValues[i][j] = 0.0;
      277          s  			mtxIndL[i][j] = 0;
      278    i     s  		}
      279             	}
      280             
      281             	// Regenerate the firstRowOfBlock data structure
      282             	ptr = 0;
      283             	for ( local_int_t c = 0; c < totalColors; c++ ) {
      284    i        		for ( local_int_t i = 0; i < blocksInColor[c].size(); i++ ) {
      285    i        			A.firstRowOfBlock[blocksInColor[c][i]] =ptr;
      286             			ptr += A.blockSize;
      287    i        		}
      288             	}
      289             
      290             	// Replace data structures
      291             	for ( local_int_t i = 0; i < nrow; i++ ) {
      292             		A.nonzerosInRow[i] = nonzerosInRow[i];
      293         2   		for ( local_int_t j = 0; j < 27; j++ ) {
      294         2   			A.matrixValues[i][j] = matrixValues[i][j];
      295         2   			A.mtxIndL[i][j] = mtxIndL[i][j];
      296         2   		}
      297             	}
      298             
      299             	//free(matrixValues);
      300             	//free(mtxIndL);
      301             	//free(nonzerosInRow);
      302             
      303             	// Regenerate the diagonal
      304             	for ( local_int_t i = 0; i < nrow; i++ ) {
      305             		local_int_t curChunk = i / A.chunkSize;
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
      306    i     s  		for ( local_int_t j = 0; j < A.nonzerosInChunk[curChunk]; j++ ) {
      307          s  			local_int_t curCol = A.mtxIndL[i][j];
      308          s  			if ( i == curCol ) {
      309             				A.matrixDiagonal[i] = &A.matrixValues[i][j];
      310             				break;
      311             			}
      312    i     s  		}
      313             	}
      314             
      315             #ifndef HPCG_NO_MPI
      316             	// Translate row IDs that will be send to neighbours
      317             	for ( local_int_t i = 0; i < A.totalToBeSent; i++ ) {
      318             		local_int_t orig = A.elementsToSend[i];
      319             		A.elementsToSend[i] = A.whichNewRowIsOldRow[orig];
      320             	}
      321             #endif
      322             
      323             #ifdef HPCG_USE_ARMPL_SPMV
      324             	// Now create the temporary data structures that will be copied (flags=0) inside the create call
      325             	local_int_t m = A.localNumberOfRows;
      326             	local_int_t n = A.localNumberOfColumns;
      327             	local_int_t nnz = 0;
      328             	for ( local_int_t i = 0; i < m; i++ ) {
      329             		nnz += A.nonzerosInRow[i];
      330             	}
      331             
      332             	armpl_int_t *row_ptr = (armpl_int_t*) std::malloc((m+1)*sizeof(armpl_int_t));
      333             	armpl_int_t *col_indx = (armpl_int_t*) std::malloc(nnz*sizeof(armpl_int_t));
      334             	double *vals = (double*) std::malloc(nnz*sizeof(double));
      335             
      336             	row_ptr[0] = 0;
      337             	for ( local_int_t i = 0; i < m; i++ ) {
      338             		row_ptr[i+1] = row_ptr[i] + A.nonzerosInRow[i];
      339             	}
      340             
      341             	global_int_t k = 0;
      342             	for ( local_int_t i = 0; i < m; i++ ) {
      343             		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      344             			col_indx[k] = A.mtxIndL[i][j];
      345             			vals[k++] = A.matrixValues[i][j];
      346             		}
      347             	}
      348             
      349             	armpl_int_t flags = 0;
      350             	armpl_spmat_create_csr_d(&A.armpl_mat, m, n, row_ptr, col_indx, vals, flags);
      351             
      352             	free(row_ptr);
      353             	free(col_indx);
      354             	free(vals);
      355             
      356             	armpl_spmat_hint(A.armpl_mat, ARMPL_SPARSE_HINT_STRUCTURE, ARMPL_SPARSE_STRUCTURE_HPCG);
      357             	armpl_spmv_optimize(A.armpl_mat);
      358             #endif
      359             
      360             	if ( A.mgData != 0 ) {
      361             		// Translate f2cOperator
      362             		local_int_t ncrow = (A.geom->nx/2) * (A.geom->ny/2) * (A.geom->nz/2);
      363         2   		for ( local_int_t i = 0; i < ncrow; i++ ) {
      364         2   			local_int_t orig = A.mgData->f2cOperator[i];
      365    i    2   			A.mgData->f2cOperator[i] = A.whichNewRowIsOldRow[orig];
      366         2   		}
      367             		
      368             		return OptimizeCoarseProblem(*A.Ac);
      369             	}
      370             	return 0;
      371             
      372             }
      373             
      374             /*!
      375               Optimizes the data structures used for CG iteration to increase the
      376               performance of the benchmark version of the preconditioned CG algorithm.
      377             
      378               @param[inout] A      The known system matrix, also contains the MG hierarchy in attributes Ac and mgData.
      379               @param[inout] data   The data structure with all necessary CG vectors preallocated
      380               @param[inout] b      The known right hand side vector
      381               @param[inout] x      The solution vector to be computed in future CG iteration
      382               @param[inout] xexact The exact solution vector
      383             
      384               @return returns 0 upon success and non-zero otherwise
      385             
      386               @see GenerateGeometry
      387               @see GenerateProblem
      388               */
      389             int OptimizeProblem(SparseMatrix & A, CGData & data, Vector & b, Vector & x, Vector & xexact) {
      390             
      391             	const local_int_t nrow = A.localNumberOfRows;
      392             
      393             	// On the finest grid we use TDG algorithm
      394             	A.TDG = true;
      395             	if (A.TDG) {
      396             
      397             	// Create an auxiliary vector to store the number of dependencies on L for every row
      398             	//unsigned char *nonzerosInLowerDiagonal = (unsigned char*) calloc(nrow, sizeof(nonzerosInLowerDiagonal));
      399             	std::vector<unsigned char> nonzerosInLowerDiagonal(nrow, 0);
      400             
      401             	/*
      402             	 * Now populate these vectors. This loop is safe to parallelize
      403             	 */
      404             #ifndef HPCG_NO_OPENMP
      405             #pragma omp parallel for
      406             #endif
      407   p         	for ( local_int_t i = 0; i < nrow; i++ ) {
      408   p         		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      409   p         			local_int_t curCol = A.mtxIndL[i][j];
      410   p         			if ( curCol < i && curCol < nrow ) { // check that it's on L and not a row from other domain
      411   pi        				nonzerosInLowerDiagonal[i]++;
      412   p         			} else if ( curCol == i ) { // we found the diagonal, no more L dependencies from here
      413   p         				break;
      414   p         			}
      415   p         		}
      416   p         	}
      417             
      418             	//local_int_t *depsVisited = (local_int_t*) calloc(nrow, sizeof(local_int_t));
      419             	//unsigned char * processed = (unsigned char*) calloc(nrow, sizeof(local_int_t));
      420             	std::vector<local_int_t> depsVisited(nrow, 0);
      421             	std::vector<bool> processed(nrow, false);
      422             	local_int_t rowsProcessed = 0;
      423             	
      424             	// Allocate the TDG structure. Starts as an empty matrix
      425    i        	A.tdg = std::vector<std::vector<local_int_t> >();
      426             
      427             	// We start by adding the first row of the grid to the first level. This row has no L dependencies
      428             	std::vector<local_int_t> aux(1, 0);
      429    i        	A.tdg.push_back(aux);
      430             
      431             	// Increment the number of dependencies visited for each of the neighbours
      432             	for ( local_int_t j = 0; j < A.nonzerosInRow[0]; j++ ) {
      433    i        		if ( A.mtxIndL[0][j] != 0 && A.mtxIndL[0][j] < nrow ) depsVisited[A.mtxIndL[0][j]]++; // don't update deps from other domains
      434             	}
      435             	processed[0] = true;
      436             	rowsProcessed++;
      437             
      438             	// Continue with the creation of the TDG
      439             	while ( rowsProcessed < nrow ) {
      440             		std::vector<local_int_t> rowsInLevel; // = std::vector<local_int_t>();
      441             
      442             		// Check for the dependencies of the rows of the level before the current one. The dependencies
      443             		// of these rows are the ones that could have their dependencies fulfilled and therefore added to the
      444             		// current level
      445    i        		unsigned int lastLevelOfTDG = A.tdg.size()-1;
      446    i        		for ( local_int_t i = 0; i < A.tdg[lastLevelOfTDG].size(); i++ ) {
      447    i        			local_int_t row = A.tdg[lastLevelOfTDG][i];
      448             
      449             			for ( local_int_t j = 0; j < A.nonzerosInRow[row]; j++ ) {
      450             				local_int_t curCol = A.mtxIndL[row][j];
      451             
      452             				if ( curCol < nrow ) { // don't process external domain rows
      453             					// If this neighbour hasn't been processed yet and all its L dependencies has been processed
      454    i        					if ( !processed[curCol] && depsVisited[curCol] == nonzerosInLowerDiagonal[curCol] ) {
      455    i        						rowsInLevel.push_back(curCol); // add the row to the new level
      456             						processed[curCol] = true; // mark the row as processed
      457             					}
      458             				}
      459             			}
      460    i        		}
      461             
      462             #ifdef TEST_REORG
      463             		//reorganizes the list
      464             		rowsInLevel = mutate_list(rowsInLevel);
      465             #endif
      466             
      467             		// Update some information
      468    i        		for ( local_int_t i = 0; i < rowsInLevel.size(); i++ ) {
      469             			rowsProcessed++;
      470    i        			local_int_t row = rowsInLevel[i];
      471             			for ( local_int_t j = 0; j < A.nonzerosInRow[row]; j++ ) {
      472             				local_int_t curCol = A.mtxIndL[row][j];
      473             				if ( curCol < nrow && curCol != row ) {
      474    i        					depsVisited[curCol]++;
      475             				}
      476             			}
      477    i        		}
      478             		
      479             		// Add the just created level to the TDG structure
      480    i        		A.tdg.push_back(rowsInLevel);
      481             	}
      482             
      483             	//free(depsVisited);
      484             	//free(nonzerosInLowerDiagonal);
      485             	//free(processed);
      486             #ifdef PRINT_TDG_GRAPH
      487             	PrintTDGGraph(A, "tgd_graph.txt");
      488             #endif
      489             	// Now we need to create some structures to translate from old and new order (yes, we will reorder the matrix)
      490    i        	A.whichNewRowIsOldRow = std::vector<local_int_t>(A.localNumberOfColumns);
      491    i        	A.whichOldRowIsNewRow = std::vector<local_int_t>(A.localNumberOfColumns);
      492             
      493             	local_int_t oldRow = 0;
      494    i        	for ( local_int_t level = 0; level < A.tdg.size(); level++ ) {
      495    i        		for ( local_int_t i = 0; i < A.tdg[level].size(); i++ ) {
      496    i        			local_int_t newRow = A.tdg[level][i];
      497    i        			A.whichOldRowIsNewRow[oldRow] = newRow;
      498    i        			A.whichNewRowIsOldRow[newRow] = oldRow++;
      499    i        		}
      500    i        	}
      501             
      502             	// External domain rows are not reordered, thus they keep the same ID
      503             	for ( local_int_t i = nrow; i < A.localNumberOfColumns; i++ ) {
      504    i        		A.whichOldRowIsNewRow[i] = i;
      505    i        		A.whichNewRowIsOldRow[i] = i;
      506             	}
      507             
      508             	// Now we need to allocate some structure to temporary allocate the reordered structures
      509             	double **matrixValues = new double*[nrow];
      510             	local_int_t **mtxIndL = new local_int_t*[nrow];
      511             	char *nonzerosInRow = new char[nrow];
      512             	for ( local_int_t i = 0; i < nrow; i++ ) {
      513             		matrixValues[i] = new double[27];
      514             		mtxIndL[i] = new local_int_t[27];
      515             	}
      516             
      517             	// And finally we reorder (and translate at the same time)
      518             #ifndef HPCG_NO_OPENMP
      519             #pragma omp parallel for
      520             #endif
      521   pi        	for ( local_int_t level = 0; level < A.tdg.size(); level++ ) {
      522   pi        		for ( local_int_t i = 0; i < A.tdg[level].size(); i++ ) {
      523   p         			local_int_t oldRow = A.tdg[level][i];
      524   pi        			local_int_t newRow = A.whichNewRowIsOldRow[oldRow];
      525             
      526   p         			nonzerosInRow[newRow] = A.nonzerosInRow[oldRow];
      527   p         			for ( local_int_t j = 0; j < A.nonzerosInRow[oldRow]; j++ ) {
      528   p         				local_int_t curOldCol = A.mtxIndL[oldRow][j];
      529   p         				matrixValues[newRow][j] = A.matrixValues[oldRow][j];
      530   pi        				mtxIndL[newRow][j] = curOldCol < nrow ? A.whichNewRowIsOldRow[curOldCol] : curOldCol; // don't translate if row is external
      531   p         			}
      532   pi        		}
      533   pi        	}
      534             
      535             	// time to replace structures
      536             #ifdef MAN_OPTIMAL_SPMV_STRUCTURE
      537             #ifndef HPCG_NO_OPENMP
      538             #pragma omp parallel for
      539             #endif
      540   p         	for ( local_int_t i = 0; i < nrow; i++ ) {
      541   p         		A.nonzerosInRow[i] = nonzerosInRow[i];
      542   p         		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      543   p         			A.matrixValues[i][j] = matrixValues[i][j];
      544   p         			A.mtxIndL[i][j] = mtxIndL[i][j];
      545   p         		}
      546             		// Put some zeros on padding positions
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    SOFTWARE PIPELINING(IPC: 0.22, ITR: 8, MVE: 2, POL: L)
                       <<< Loop-information  End >>>
      547   p     2   		for ( local_int_t j = A.nonzerosInRow[i]; j < 27; j++ ) {
      548   p     2   			A.matrixValues[i][j] = 0.0;
      549   p     2   			A.mtxIndL[i][j] = 0;
      550   p     2   		}
      551   p         	}
      552             
      553             	//free(matrixValues);
      554             	//free(mtxIndL);
      555             	//free(nonzerosInRow);
      556             
      557             	// Regenerate the diagonal
      558             	for ( local_int_t i = 0; i < nrow; i++ ) {
      559             		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      560             			local_int_t curCol = A.mtxIndL[i][j];
      561             			if ( i == curCol ) {
      562             				A.matrixDiagonal[i] = &A.matrixValues[i][j];
      563             			}
      564             		}
      565             	}
      566             #else
      567             	//#ifndef HPCG_NO_OPENMP
      568             	//#pragma omp parallel for
      569             	//#endif
      570             	double* bufferPos = A.matrixValues[0];
      571             	local_int_t* bufferIdx = A.mtxIndL[0];
      572             
      573             	for ( local_int_t i = 0; i < nrow; i++ ) {
      574             		A.nonzerosInRow[i] = nonzerosInRow[i];
      575             		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      576             			A.matrixValues[i][j] = matrixValues[i][j];
      577             			A.mtxIndL[i][j] = mtxIndL[i][j];
      578             		}
      579             		// Put some zeros on padding positions
      580             		/*for ( local_int_t j = A.nonzerosInRow[i]; j < 27; j++ ) {
      581             			A.matrixValues[i][j] = 0.0;
      582             			A.mtxIndL[i][j] = 0;
      583             		}*/
      584             		bufferPos += A.nonzerosInRow[i];
      585             		bufferIdx += A.nonzerosInRow[i];
      586             		if (i-1<nrow) {
      587             			A.matrixValues[i+1] = bufferPos;
      588             			A.mtxIndL[i+1] = bufferIdx;
      589             		}
      590             	}
      591             
      592             	//free(matrixValues);
      593             	//free(mtxIndL);
      594             	//free(nonzerosInRow);
      595             
      596             	// Regenerate the diagonal
      597             	for ( local_int_t i = 0; i < nrow; i++ ) {
      598             		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      599             			local_int_t curCol = A.mtxIndL[i][j];
      600             			if ( i == curCol ) {
      601             				A.matrixDiagonal[i] = &A.matrixValues[i][j];
      602             			}
      603             		}
      604             	}
      605             #endif
      606             
      607             	// Translate TDG row IDs
      608             	oldRow = 0;
      609    i        	for ( local_int_t l = 0; l < A.tdg.size(); l++ ) {
      610    i        		for ( local_int_t i = 0; i < A.tdg[l].size(); i++ ) {
      611    i        			A.tdg[l][i] = oldRow++;
      612    i        		}
      613    i        	}
      614             
      615             #ifndef HPCG_NO_MPI
      616             	// Translate the row IDs that will be send to other domains
      617             	for ( local_int_t i = 0; i < A.totalToBeSent; i++ ) {
      618             		local_int_t orig = A.elementsToSend[i];
      619             		A.elementsToSend[i] = A.whichNewRowIsOldRow[orig];
      620             	}
      621             #endif
      622             
      623             	// Reorder b (RHS) vector
      624             	Vector bReorder;
      625    i        	InitializeVector(bReorder, b.localLength);
      626             	CopyVector(b, bReorder);
      627             	CopyAndReorderVector(bReorder, b, A.whichNewRowIsOldRow);
      628             
      629             #ifdef HPCG_USE_ARMPL_SPMV
      630             	// Now create the temporary data structures that will be copied (flags=0) inside the create call
      631             	local_int_t m = A.localNumberOfRows;
      632             	local_int_t n = A.localNumberOfColumns;
      633             	local_int_t nnz = 0;
      634             	for ( local_int_t i = 0; i < m; i++ ) {
      635             		nnz += A.nonzerosInRow[i];
      636             	}
      637             
      638             	armpl_int_t *row_ptr = (armpl_int_t*) std::malloc((m+1)*sizeof(armpl_int_t));
      639             	armpl_int_t *col_indx = (armpl_int_t*) std::malloc(nnz*sizeof(armpl_int_t));
      640             	double *vals = (double*) std::malloc(nnz*sizeof(double));
      641             
      642             	row_ptr[0] = 0;
      643             	for ( local_int_t i = 0; i < m; i++ ) {
      644             		row_ptr[i+1] = row_ptr[i] + A.nonzerosInRow[i];
      645             	}
      646             
      647             	global_int_t k = 0;
      648             	for ( local_int_t i = 0; i < m; i++ ) {
      649             		for ( local_int_t j = 0; j < A.nonzerosInRow[i]; j++ ) {
      650             			col_indx[k] = A.mtxIndL[i][j];
      651             			vals[k++] = A.matrixValues[i][j];
      652             		}
      653             	}
      654             
      655             	armpl_int_t flags = 0;
      656             	armpl_spmat_create_csr_d(&A.armpl_mat, m, n, row_ptr, col_indx, vals, flags);
      657             
      658             	free(row_ptr);
      659             	free(col_indx);
      660             	free(vals);
      661             
      662             	armpl_spmat_hint(A.armpl_mat, ARMPL_SPARSE_HINT_STRUCTURE, ARMPL_SPARSE_STRUCTURE_HPCG);
      663             	armpl_spmv_optimize(A.armpl_mat);
      664             #endif
      665             	}
      666             	else {
      667             		OptimizeCoarseProblem(A);
      668             	}
      669             
      670             	if ( A.mgData != 0 ) {
      671             		// Translate f2cOperator values
      672             		local_int_t ncrow = (A.geom->nx/2) * (A.geom->ny/2) * (A.geom->nz/2);
      673         2   		for ( local_int_t i = 0; i < ncrow; i++ ) {
      674         2   			local_int_t orig = A.mgData->f2cOperator[i];
      675    i    2   			A.mgData->f2cOperator[i] = A.whichNewRowIsOldRow[orig];
      676         2   		}
      677             
      678             		return OptimizeCoarseProblem(*A.Ac);
      679             	}
      680             
      681             	return 0;
      682             }
      683             
      684             // Helper function (see OptimizeProblem.hpp for details)
      685             double OptimizeProblemMemoryUse(const SparseMatrix & A) {
      686             
      687             	return 0.0;
      688             
      689             }
      690             
      691             #ifdef TEST_REORG
      692             std::vector<local_int_t> mutate_list(std::vector<local_int_t>& listRef) {
      693                 auto list = std::list<local_int_t>(listRef.begin(),listRef.end());
      694                 auto sortedList = std::vector<local_int_t>();
      695                 auto iter = list.begin();
      696                 while (iter != list.end()) {
      697                     int value = *iter;
      698                     list.erase(iter);
      699                     sortedList.push_back(value);
      700             
      701                     int val1 = value + 144*(144-2);
      702                     int val2 = value + 144-2;
      703                     auto it1 = std::find(list.begin(), list.end(), val1);
      704                     if (it1 != list.end()) {
      705             
      706                         list.erase(it1);
      707                         sortedList.push_back(val1);
      708                     }
      709                     auto it2 = std::find(list.begin(), list.end(), val2);
      710                     if (it2 != list.end()) {
      711                         iter = it2;
      712                     }
      713                     else {
      714                         iter = list.begin();
      715                     }
      716                 }
      717                 return sortedList;
      718             }
      719             
      720             std::vector<local_int_t> mutate_list2(std::vector<local_int_t>& listRef) {
      721                 auto list = std::list<local_int_t>(listRef.begin(), listRef.end());
      722                 auto sortedList = std::vector<local_int_t>();
      723             
      724                 auto iter = list.begin();
      725                 while (iter != list.end()) {
      726                     int value = *iter;
      727                     list.erase(iter);
      728                     sortedList.push_back(value);
      729             
      730                     int val1 = value + 144-2;
      731                     auto it1 = std::find(list.begin(), list.end(), val1);
      732                     if (it1 != list.end()) {
      733                         iter = it1;
      734                     }
      735                     else {
      736                         int val2 = value + 144*(144-2);
      737                         auto it2 = std::find(list.begin(), list.end(), val2);
      738                         if (it2 != list.end()) {
      739                             iter = it2;
      740                         }
      741                         else {
      742                             iter = list.begin();
      743                         }
      744                     }
      745                 }
      746                 return sortedList;
      747             }
      748             #endif
Total prefetch num: 0
Optimization messages
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__120__vector_base_commonILb1EEC1Ev'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPhNS_9allocatorIhEELj2EEC1ES1_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EELj0EEC1ES5_S7_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EELj2EEC1ES5_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC1ES1_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC1ES1_S3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impImNS_9allocatorImEELj2EEC1Em'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiRNS_9allocatorIiEELj0EEC1ES1_S4_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC1Ev'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC1ERKS2_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEEC1Ev'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEEC1Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEED2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 0: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEED2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 54: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiRNS_9allocatorIiEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 54: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 56: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiRNS_9allocatorIiEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 56: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 57: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPiRNS_9allocatorIiEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 57: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 83: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE17__destruct_at_endEPi'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 83: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE17__destruct_at_endEPS4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 86: Inline expansion is applied to the user defined function '_ZNKSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 86: Inline expansion is applied to the user defined function '_ZNKSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE9__end_capEv'.
  jwd6208s-i  "../src/Vector.hpp", line 99: SIMD conversion is not applied to this loop because the uncertain order of the definition and reference to variable 'wv' may cause different results from serial execution.
  jwd8663o-i  "../src/Vector.hpp", line 99: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8202o-i  "../src/Vector.hpp", line 99: Loop unrolling expanding 4 times is applied to this loop.
  jwd6101s-i  "../src/Vector.hpp", line 108: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8663o-i  "../src/Vector.hpp", line 108: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8202o-i  "../src/Vector.hpp", line 108: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "../src/Vector.hpp", line 109: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 113: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 114: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 114: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 115: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 120: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8664o-i  "../src/OptimizeProblem.cpp", line 120: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8670o-i  "../src/OptimizeProblem.cpp", line 125: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8203o-i  "../src/OptimizeProblem.cpp", line 131: Loop full unrolling is applied to this loop.
  jwd8203o-i  "../src/OptimizeProblem.cpp", line 133: Loop full unrolling is applied to this loop.
  jwd6229s-i  "../src/OptimizeProblem.cpp", line 135: SIMD conversion is not applied to this loop because "if" statements exist in the loop.
  jwd8203o-i  "../src/OptimizeProblem.cpp", line 135: Loop full unrolling is applied to this loop.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 136: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE17__destruct_at_endEPiNS_17integral_constantIbLb0EEE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 136: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE17__destruct_at_endEPS4_NS_17integral_constantIbLb0EEE'.
  jwd8209o-i  "../src/OptimizeProblem.cpp", line 137: Evaluation order of polynomial expression is changed according to commutative law of addition and multiplication.
  jwd6228s-i  "../src/OptimizeProblem.cpp", line 138: SIMD conversion is not applied to this loop because the order of the definition and reference to the variable is different from serial execution because of data dependency.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 154: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 157: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6131s-i  "../src/OptimizeProblem.cpp", line 162: SIMD conversion is not applied to this loop because the loop has two or more exits.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 162: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 165: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 168: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6131s-i  "../src/OptimizeProblem.cpp", line 174: SIMD conversion is not applied to this loop because the loop has two or more exits.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 174: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 175: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 176: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 181: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6101s-i  "../src/OptimizeProblem.cpp", line 191: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8663o-i  "../src/OptimizeProblem.cpp", line 191: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8202o-i  "../src/OptimizeProblem.cpp", line 191: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 192: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 200: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8664o-i  "../src/OptimizeProblem.cpp", line 200: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 201: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 201: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 201: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE9push_backERKi'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 204: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd6101s-i  "../src/OptimizeProblem.cpp", line 205: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8663o-i  "../src/OptimizeProblem.cpp", line 205: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8202o-i  "../src/OptimizeProblem.cpp", line 205: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 206: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 206: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 206: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8664o-i  "../src/OptimizeProblem.cpp", line 213: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 220: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 221: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 224: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 224: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 227: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 227: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 228: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 231: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 231: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 236: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 237: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 240: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 240: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/utility", line 242: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRNS_6vectorIiNS_9allocatorIiEEEEEEONS_16remove_referenceIT_E4typeEOS7_'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 243: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 243: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 244: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 245: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 251: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 254: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 255: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 255: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 256: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 264: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 264: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 266: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 275: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 275: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 275: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 278: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 284: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 284: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 284: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 284: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 285: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 285: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 287: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 287: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8671o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 290: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8664o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 290: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 291: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 291: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 291: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 291: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 291: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 291: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE7destroyIS4_EEvRS5_PT_'.
  jwd6101s-i  "../src/OptimizeProblem.cpp", line 293: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8662o-i  "../src/OptimizeProblem.cpp", line 293: This loop is not software pipelined because no schedule is obtained.
  jwd8202o-i  "../src/OptimizeProblem.cpp", line 293: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 305: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiRNS_9allocatorIiEEEC1ES1_S4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 305: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEEC1ES5_S7_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 306: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 306: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 306: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 306: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE8allocateERS5_m'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 306: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 306: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 306: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 308: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 308: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 312: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__bit_reference", line 332: Inline expansion is applied to the user defined function '_ZNSt3__13minImEERKT_S3_S3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 336: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 336: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 338: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 338: Inline expansion is applied to the user defined function '_ZNKSt3__114__split_bufferIiRNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 338: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pim'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 338: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 338: Inline expansion is applied to the user defined function '_ZNKSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__split_buffer", line 338: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE10deallocateERS5_PS4_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__bit_reference", line 340: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerImEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 350: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 350: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 350: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPhNS_9allocatorIhEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 353: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 353: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPhNS_9allocatorIhEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 353: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 356: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 356: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPhNS_9allocatorIhEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 356: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 359: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPiNS_9allocatorIiEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 359: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 359: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairIPhNS_9allocatorIhEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__bit_reference", line 362: Inline expansion is applied to the user defined function '_ZNSt3__13minImEERKT_S3_S3_'.
  jwd6101s-i  "../src/OptimizeProblem.cpp", line 363: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8663o-i  "../src/OptimizeProblem.cpp", line 363: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8202o-i  "../src/OptimizeProblem.cpp", line 363: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 365: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 368: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE17__destruct_at_endEPh'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 368: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE17__destruct_at_endEPi'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 368: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE17__destruct_at_endEPS4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__bit_reference", line 370: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerImEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 371: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIhNS_9allocatorIhEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 371: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 371: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 386: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE19__move_assign_allocERS6_NS_17integral_constantIbLb1EEE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 386: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__move_assign_allocERS3_NS_17integral_constantIbLb1EEE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__bit_reference", line 389: Inline expansion is applied to the user defined function '_ZNSt3__114__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEC1ERKS5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/__bit_reference", line 391: Inline expansion is applied to the user defined function '_ZNSt3__114__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEC1ERKS5_'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 408: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 408: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 409: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 409: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRNS_9allocatorINS_6vectorIiNS1_IiEEEEEEEEONS_16remove_referenceIT_E4typeEOS8_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 409: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 409: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRNS_9allocatorIiEEEEONS_16remove_referenceIT_E4typeEOS5_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 411: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIhNS_9allocatorIhEEEixEm'.
  jwd8671o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 423: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8664o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 423: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE7destroyIiEEvRS2_PT_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIhEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE7destroyIhEEvRS2_PT_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 424: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE7destroyIS4_EEvRS5_PT_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 425: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEaSEOS5_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 429: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE9push_backERKS3_'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 432: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8670o-i  "../src/OptimizeProblem.cpp", line 432: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 433: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 434: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPhNS_9allocatorIhEEEC1ES1_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 434: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC1ES1_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 434: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEEC1ES5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 443: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairIPiNS_9allocatorIiEEEC1ES1_S3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 445: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 446: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 446: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 447: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 447: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 449: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8664o-i  "../src/OptimizeProblem.cpp", line 449: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 451: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 451: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 451: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIhNS_9allocatorIhEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE10deallocateERS2_Phm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pim'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 452: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE10deallocateERS5_PS4_m'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 454: Inline expansion is applied to the user defined function '_ZNKSt3__115__bit_referenceINS_6vectorIbNS_9allocatorIbEEEELb1EEcvbEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 454: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 454: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIhNS_9allocatorIhEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 455: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE9push_backERKi'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 460: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 460: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 468: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 470: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 471: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8670o-i  "../src/OptimizeProblem.cpp", line 471: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 474: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 477: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 480: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE9push_backERKS3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 484: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 484: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEEC2Ev'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 490: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 491: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEaSEOS3_'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 494: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 495: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 495: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 495: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 495: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 496: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 496: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 497: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 498: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 499: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 499: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 500: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 503: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 503: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 504: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 505: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8664o-i  "../src/OptimizeProblem.cpp", line 512: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 521: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 522: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 522: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 523: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 523: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 524: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 527: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8670o-i  "../src/OptimizeProblem.cpp", line 527: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 530: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 532: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 532: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 533: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 542: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 542: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd6101s-i  "../src/OptimizeProblem.cpp", line 547: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8204o-i  "../src/OptimizeProblem.cpp", line 547: This loop is software pipelined.
  jwd8205o-i  "../src/OptimizeProblem.cpp", line 547: The software-pipelined loop is chosen at run time when the iteration count is greater than or equal to 8.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 559: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8670o-i  "../src/OptimizeProblem.cpp", line 559: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 609: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 610: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 610: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd6142s-i  "../src/OptimizeProblem.cpp", line 610: SIMD conversion is not applied to this loop because the iteration count is uncertainty.
  jwd8671o-i  "../src/OptimizeProblem.cpp", line 610: This loop cannot be software pipelined because the shape of the loop is not covered by software pipelining.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 611: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 611: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 612: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEEixEm'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 612: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 613: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 625: Inline expansion is applied to the user defined function '_Z16InitializeVectorR13Vector_STRUCTi'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 644: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 644: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIhNS_9allocatorIhEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 644: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE8capacityEv'.
  jwd6101s-i  "../src/OptimizeProblem.cpp", line 673: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8663o-i  "../src/OptimizeProblem.cpp", line 673: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8202o-i  "../src/OptimizeProblem.cpp", line 673: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "../src/OptimizeProblem.cpp", line 675: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 683: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 683: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 683: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIhEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 737: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 737: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 738: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 738: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 739: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_shrinkEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 739: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE17__annotate_shrinkEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 740: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 740: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE26__invalidate_all_iteratorsEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIhNS_9allocatorIhEEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIhNS_9allocatorIhEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIhNS_9allocatorIhEEE31__annotate_contiguous_containerEPKvS5_S5_S5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 840: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 845: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE31__annotate_contiguous_containerEPKvS5_S5_S5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 855: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE31__annotate_contiguous_containerEPKvS7_S7_S7_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 888: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE17__annotate_deleteEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 888: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE17__annotate_deleteEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 889: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 889: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE20__construct_backwardIiEENS_9enable_ifIXaaoosr3std3__17is_sameIS2_NS1_IT_EEEE5valuentsr3std3__115__has_constructIS2_PS6_JS6_EEE5valuesr3std3__131is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 889: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 889: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE20__construct_backwardIPS4_EEvRS5_T_SA_RSA_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 890: Inline expansion is applied to the user defined function '_ZNSt3__14swapIPiEENS_9enable_ifIXaasr3std3__121is_move_constructibleIT_EE5valuesr3std3__118is_move_assignableIS3_EE5valueEvE4typeERS3_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 890: Inline expansion is applied to the user defined function '_ZNSt3__14swapIPNS_6vectorIiNS_9allocatorIiEEEEEENS_9enable_ifIXaasr3std3__121is_move_constructibleIT_EE5valuesr3std3__118is_move_assignableIS7_EE5valueEvE4typeERS7_SA_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 891: Inline expansion is applied to the user defined function '_ZNSt3__14swapIPiEENS_9enable_ifIXaasr3std3__121is_move_constructibleIT_EE5valuesr3std3__118is_move_assignableIS3_EE5valueEvE4typeERS3_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 891: Inline expansion is applied to the user defined function '_ZNSt3__14swapIPNS_6vectorIiNS_9allocatorIiEEEEEENS_9enable_ifIXaasr3std3__121is_move_constructibleIT_EE5valuesr3std3__118is_move_assignableIS7_EE5valueEvE4typeERS7_SA_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 892: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 892: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 892: Inline expansion is applied to the user defined function '_ZNSt3__14swapIPiEENS_9enable_ifIXaasr3std3__121is_move_constructibleIT_EE5valuesr3std3__118is_move_assignableIS3_EE5valueEvE4typeERS3_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 892: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 892: Inline expansion is applied to the user defined function '_ZNSt3__114__split_bufferINS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 892: Inline expansion is applied to the user defined function '_ZNSt3__14swapIPNS_6vectorIiNS_9allocatorIiEEEEEENS_9enable_ifIXaasr3std3__121is_move_constructibleIT_EE5valuesr3std3__118is_move_assignableIS7_EE5valueEvE4typeERS7_SA_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 894: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 894: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 894: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 894: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE14__annotate_newEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 895: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE26__invalidate_all_iteratorsEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 895: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE26__invalidate_all_iteratorsEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 928: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 928: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE8allocateERS5_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 928: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 928: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE8allocateERS2_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 928: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 928: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE8allocateERS2_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 929: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 929: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 929: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 930: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE14__annotate_newEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 930: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIhNS_9allocatorIhEEE14__annotate_newEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 930: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE14__annotate_newEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 939: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 939: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE5clearEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 940: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 940: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 940: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE10deallocateERS2_Pim'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 940: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 940: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 940: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE10deallocateERS5_PS4_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 941: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 941: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE8max_sizeERKS5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNSt3__13minImEERKT_S3_S3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIhNS_9allocatorIhEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE8max_sizeERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 949: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE8max_sizeERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 961: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 961: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE8capacityEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 964: Inline expansion is applied to the user defined function '_ZNSt3__13maxImEERKT_S3_S3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 976: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 976: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd6133s-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 977: SIMD conversion is not applied to this loop because the loop is too complicated.
  jwd8670o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 977: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8202o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 977: Loop unrolling expanding 2 times is applied to this loop.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 980: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 980: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiJEEEvRS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 980: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 980: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE9constructIS4_JEEEvRS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 983: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 983: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 998: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 998: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd6101s-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 999: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8670o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1000: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1002: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIhEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1002: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE9constructIhJRKhEEEvRS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1002: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1002: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1005: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIhNS_9allocatorIhEEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1005: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1018: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1020: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE25__construct_range_forwardIiEENS_9enable_ifIXaaoosr3std3__17is_sameIS2_NS1_IT_EEEE5valuentsr3std3__115__has_constructIS2_PS6_JS6_EEE5valuesr3std3__131is_trivially_move_constructibleIS6_EE5valueEvE4typeERS2_S8_S8_RS8_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1021: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1064: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1064: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEEC2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1093: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIhNS_9allocatorIhEEEC2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1093: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1100: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIhNS_9allocatorIhEEE18__construct_at_endEmRKh'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1100: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endEmRKi'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1195: Inline expansion is applied to the user defined function '_ZNKSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1195: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1195: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1199: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1203: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE18__construct_at_endIPiEENS_9enable_ifIXsr3std3__121__is_forward_iteratorIT_EE5valueEvE4typeES7_S7_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1233: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1233: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRNS_9allocatorIiEEEEONS_16remove_referenceIT_E4typeEOS5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1233: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEEC2ERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1240: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1241: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1334: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE19__move_assign_allocERS3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1334: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE19__move_assign_allocERS6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1337: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1337: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1338: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1338: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1479: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIiE8allocateEmPKv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1479: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorINS_6vectorIiNS0_IiEEEEE8allocateEmPKv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1479: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIhE8allocateEmPKv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1479: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorImE8allocateEmPKv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1487: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIiE10deallocateEPim'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1487: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorINS_6vectorIiNS0_IiEEEEE10deallocateEPS3_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1487: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIhE10deallocateEPhm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1487: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorImE10deallocateEPmm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKiEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE11__constructIiJRKiEEEvNS_17integral_constantIbLb1EEERS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE11__constructIiJEEEvNS_17integral_constantIbLb1EEERS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKhEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE11__constructIhJRKhEEEvNS_17integral_constantIbLb1EEERS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS7_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE11__constructIS4_JRKS4_EEEvNS_17integral_constantIbLb1EEERS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE11__constructIS4_JEEEvNS_17integral_constantIbLb1EEERS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__17forwardINS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS5_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1493: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE11__constructIS4_JS4_EEEvNS_17integral_constantIbLb1EEERS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1527: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE9__destroyIiEEvNS_17integral_constantIbLb1EEERS2_PT_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1527: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE9__destroyIhEEvNS_17integral_constantIbLb1EEERS2_PT_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1527: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE9__destroyIS4_EEvNS_17integral_constantIbLb1EEERS5_PT_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1531: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1531: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE10__max_sizeENS_17integral_constantIbLb1EEERKS5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1531: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIhEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1531: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorImEEE10__max_sizeENS_17integral_constantIbLb1EEERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1536: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE37select_on_container_copy_constructionENS_17integral_constantIbLb0EEERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1570: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1570: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1571: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1571: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEE11__recommendEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1571: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE4sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1571: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE11__recommendEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1573: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1573: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKiEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1573: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1573: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1573: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS7_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1573: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE9constructIS4_JRKS4_EEEvRS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1583: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1583: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE9__end_capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1586: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseIiNS_9allocatorIiEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1586: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIiEEPT_S2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1586: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorIiEEE9constructIiJRKiEEEvRS2_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1586: Inline expansion is applied to the user defined function '_ZNSt3__113__vector_baseINS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1586: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1586: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE9constructIS4_JRKS4_EEEvRS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1588: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 1588: Inline expansion is applied to the user defined function '_ZNSt3__16vectorINS0_IiNS_9allocatorIiEEEENS1_IS3_EEE24__RAII_IncreaseAnnotator6__doneEv'.
  jwd8670o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1607: This loop cannot be software pipelined because the loop contains a branch instruction.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1609: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerINS_6vectorIiNS_9allocatorIiEEEEEEPT_S6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1609: Inline expansion is applied to the user defined function '_ZNSt3__116move_if_noexceptINS_6vectorIiNS_9allocatorIiEEEEEENS_11conditionalIXaantsr3std3__129is_nothrow_move_constructibleIT_EE5valuesr3std3__121is_copy_constructibleIS6_EE5valueERKS6_OS6_E4typeERS6_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1609: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorINS_6vectorIiNS1_IiEEEEEEE9constructIS4_JS4_EEEvRS5_PT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIiE9constructIiJEEEvPT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKiEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIiE9constructIiJRKiEEEvPT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKhEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIhE9constructIhJRKhEEEvPT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS7_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorINS_6vectorIiNS0_IiEEEEE9constructIS3_JRKS3_EEEvPT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorINS_6vectorIiNS0_IiEEEEE9constructIS3_JEEEvPT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__17forwardINS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS5_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1647: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorINS_6vectorIiNS0_IiEEEEE9constructIS3_JS3_EEEvPT_DpOT0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1659: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIiE7destroyEPi'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1659: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorIhE7destroyEPh'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1659: Inline expansion is applied to the user defined function '_ZNSt3__19allocatorINS_6vectorIiNS0_IiEEEEE7destroyEPS3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1669: Inline expansion is applied to the user defined function '_ZNKSt3__19allocatorIhE8max_sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1669: Inline expansion is applied to the user defined function '_ZNKSt3__19allocatorImE8max_sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1669: Inline expansion is applied to the user defined function '_ZNKSt3__19allocatorIiE8max_sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1669: Inline expansion is applied to the user defined function '_ZNKSt3__19allocatorINS_6vectorIiNS0_IiEEEEE8max_sizeEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1724: Inline expansion is applied to the user defined function '_ZNSt3__110__allocateEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1726: Inline expansion is applied to the user defined function '_ZNSt3__112__deallocateEPv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZnwmPv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZdlPvS_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKiEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKhEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRKNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS7_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZNSt3__17forwardINS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS5_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEC1EOS3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1735: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEEC1Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 1790: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2058: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPiEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2058: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRNS_9allocatorIiEEEEOT_RNS_16remove_referenceIS4_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2058: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS6_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2058: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRNS_9allocatorINS_6vectorIiNS1_IiEEEEEEEEOT_RNS_16remove_referenceIS7_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2150: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairImNS_9allocatorImEEE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2156: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairImNS_9allocatorImEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2159: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairImNS_9allocatorImEEE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2237: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPiEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2237: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS6_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2237: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPhEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2237: Inline expansion is applied to the user defined function '_ZNSt3__17forwardImEEOT_RNS_16remove_referenceIS1_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2243: Inline expansion is applied to the user defined function '_ZNSt3__17forwardINS_9allocatorIiEEEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2243: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPiEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2309: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE10__make_refEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2396: Inline expansion is applied to the user defined function '_ZNSt3__115__bit_referenceINS_6vectorIbNS_9allocatorIbEEEELb1EEC1EPmm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2402: Inline expansion is applied to the user defined function '_ZNSt3__114__bit_iteratorINS_6vectorIbNS_9allocatorIbEEEELb0ELm0EEC1EPmj'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__17forwardImEEOT_RNS_16remove_referenceIS1_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impImNS_9allocatorImEELj2EEC2Em'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPhEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPhNS_9allocatorIhEELj2EEC2ES1_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPiEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS6_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2416: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EELj2EEC2ES5_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPiEEOT_RNS_16remove_referenceIS2_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__17forwardINS_9allocatorIiEEEEOT_RNS_16remove_referenceIS3_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EEC2ES1_S3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRNS_9allocatorIiEEEEOT_RNS_16remove_referenceIS4_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiRNS_9allocatorIiEELj0EEC2ES1_S4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIPNS_6vectorIiNS_9allocatorIiEEEEEEOT_RNS_16remove_referenceIS6_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__17forwardIRNS_9allocatorINS_6vectorIiNS1_IiEEEEEEEEOT_RNS_16remove_referenceIS7_E4typeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2420: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EELj0EEC2ES5_S7_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EELj0EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPhNS_9allocatorIhEELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impImNS_9allocatorImEELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiRNS_9allocatorIiEELj0EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2470: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2470: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2470: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPhNS_9allocatorIhEELj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2470: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPiRNS_9allocatorIiEELj0EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2470: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EELj0EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2472: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2472: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2472: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPhNS_9allocatorIhEELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2472: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impImNS_9allocatorImEELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2472: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPiRNS_9allocatorIiEELj0EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2472: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEERNS2_IS4_EELj0EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2473: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPiNS_9allocatorIiEELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2473: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPNS_6vectorIiNS_9allocatorIiEEEENS2_IS4_EELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2473: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impIPhNS_9allocatorIhEELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2473: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impImNS_9allocatorImEELj2EE6secondEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2478: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE26__external_cap_to_internalEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2479: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2479: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorImEEE8allocateERS2_m'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2481: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE5__capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2501: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIbNS_9allocatorIbEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2501: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorImEEE8max_sizeERKS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2505: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE26__internal_cap_to_externalEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2534: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE11__make_iterEm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2534: Inline expansion is applied to the user defined function '_ZNSt3__16fill_nINS_6vectorIbNS_9allocatorIbEEEEEEvNS_14__bit_iteratorIT_Lb0ELi0EEENS6_9size_typeEb'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/algorithm", line 2594: Inline expansion is applied to the user defined function '_ZNKSt3__16__lessImmEclERKmS3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/algorithm", line 2602: Inline expansion is applied to the user defined function '_ZNSt3__13minImNS_6__lessImmEEEERKT_S5_S5_T0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2608: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairImNS_9allocatorImEEEC1Em'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2612: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE18__construct_at_endEmb'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/algorithm", line 2659: Inline expansion is applied to the user defined function '_ZNKSt3__16__lessImmEclERKmS3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/algorithm", line 2667: Inline expansion is applied to the user defined function '_ZNSt3__13maxImNS_6__lessImmEEEERKT_S5_S5_T0_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2751: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE7__allocEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2751: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE5__capEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2751: Inline expansion is applied to the user defined function '_ZNSt3__116allocator_traitsINS_9allocatorImEEE10deallocateERS2_Pmm'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/vector", line 2752: Inline expansion is applied to the user defined function '_ZNSt3__16vectorIbNS_9allocatorIbEEE26__invalidate_all_iteratorsEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/type_traits", line 3716: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRPiEEONS_16remove_referenceIT_E4typeEOS4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/type_traits", line 3716: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRPNS_6vectorIiNS_9allocatorIiEEEEEEONS_16remove_referenceIT_E4typeEOS8_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/type_traits", line 3717: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRPiEEONS_16remove_referenceIT_E4typeEOS4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/type_traits", line 3717: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRPNS_6vectorIiNS_9allocatorIiEEEEEEONS_16remove_referenceIT_E4typeEOS8_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/type_traits", line 3718: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRPiEEONS_16remove_referenceIT_E4typeEOS4_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/type_traits", line 3718: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRPNS_6vectorIiNS_9allocatorIiEEEEEEONS_16remove_referenceIT_E4typeEOS8_'.
Statistics information
  Option information
    Command line options : -c -DHPCG_CONTIGUOUS_ARRAYS -DHPCG_NO_MPI -DENABLE_MG_COUNTERS -DHPCG_USE_SVE -DHPCG_MAN_OPT_DDOT -DDDOT_2_UNROLL -DWAXPBY_AUTO_OPT -HPCG_MAN_OPT_SCHEDULE_ON -DHPCG_MAN_OPT_SPMV_UNROLL -DSPMV_4_UNROLL -Khpctag -Kzfill -I./src -I./src/OOKAMI_OMP_FJ -Kfast -KSVE -Kopenmp -ffast-math -funroll-loops -std=c++11 -ffp-contract=fast -march=armv8.2-a+sve -Kocl -Koptmsg=2 -Nlst=t -I../src -o src/OptimizeProblem.o
    Effective options    : -g0 -mt -Qy -std=gnu++11 -x- -x=quick -O3 -Knoalias_const
                           -Kalign_loops -Knoarray_declaration_opt -Kassume=noshortloop
                           -Kassume=nomemory_bandwidth -Kassume=notime_saving_compilation
                           -Kcmodel=small -Keval -Keval_noconcurrent
                           -Knoextract_stride_store -Kfast_matmul -Knofenv_access
                           -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                           -Kilfunc=procedure -Klargepage -Klib -Kloop_blocking
                           -Kloop_fission -Kloop_nofission_stripmining
                           -Kloop_fission_threshold=50 -Kloop_fusion -Kloop_interchange
                           -Kloop_part_simd -Kloop_perfect_nest -Kloop_noversioning
                           -Klooptype=f -Knomemalias -Kmfunc=1 -Kocl -Komitfp -Kopenmp
                           -Kopenmp_noassume_norecurrence
                           -Kopenmp_nocollapse_except_innermost
                           -Kopenmp_loop_variable=private -Kopenmp_noordered_reduction
                           -Knoopenmp_simd -Knooptlib_string -Koptmsg=2
                           -Knopc_relative_literal_loads -Knoparallel
                           -Kparallel_nofp_precision -Knopreex -Kprefetch_cache_level=all
                           -Kprefetch_noconditional -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride -Kprefetch_strong
                           -Kprefetch_strong_L2 -Knopreload -Krdconv=1
                           -Kremove_inlinefunction -Knorestp -Ksch_post_ra -Ksch_pre_ra
                           -Ksibling_calls -Ksimd=auto -Ksimd_packed_promotion
                           -Ksimd_reduction_product -Ksimd_reg_size=512
                           -Ksimd_nouncounted_loop -Ksimd_use_multiple_structures
                           -Knostrict_aliasing -Knostriping -KA64FX -KARMV8_2_A -KSVE -Kswp
                           -Kswp_freg_rate=100 -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                           -Kswp_policy=auto -Kunroll -Knounroll_and_jam -Kzfill
                           -Ncancel_overtime_compilation -Nnocoverage -Nexceptions -Nnofjcex
                           -Nfjprof -Nnohook_func -Nnohook_time -Nlibomp -Nline -Nlst=p
                           -Nlst=t -Nquickdbg=noheapchk -Nquickdbg=nosubchk -NRnotrap
                           -Nnoreordered_variable_stack -Nrt_notune -Nsetvalue=noheap
                           -Nsetvalue=nostack -Nsetvalue=noscalar -Nsetvalue=noarray
                           -Nsetvalue=nostruct -Nsrc -Nsta
