Fujitsu C/C++ Version 4.7.0   Tue Jul 18 04:20:45 2023
Compilation information
  Current directory : /lustre/home/gapinzon/arm_code/HPCG_for_Arm/ookami_fj2
  Source file       : ../src/CG.cpp
(line-no.)(optimize)
        1             /*
        2              *
        3              *  SPDX-License-Identifier: Apache-2.0
        4              *
        5              *  Copyright (C) 2019, Arm Limited and contributors
        6              *
        7              *  Licensed under the Apache License, Version 2.0 (the "License");
        8              *  you may not use this file except in compliance with the License.
        9              *  You may obtain a copy of the License at
       10              *
       11              *      http://www.apache.org/licenses/LICENSE-2.0
       12              *
       13              *  Unless required by applicable law or agreed to in writing, software
       14              *  distributed under the License is distributed on an "AS IS" BASIS,
       15              *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       16              *  See the License for the specific language governing permissions and
       17              *  limitations under the License.
       18              *
       19              */
       20             
       21             //@HEADER
       22             // ***************************************************
       23             //
       24             // HPCG: High Performance Conjugate Gradient Benchmark
       25             //
       26             // Contact:
       27             // Michael A. Heroux ( maherou@sandia.gov)
       28             // Jack Dongarra     (dongarra@eecs.utk.edu)
       29             // Piotr Luszczek    (luszczek@eecs.utk.edu)
       30             //
       31             // ***************************************************
       32             //@HEADER
       33             
       34             /*!
       35              @file CG.cpp
       36             
       37              HPCG routine
       38              */
       39             
       40             #include <fstream>
       41             
       42             #include <cmath>
       43             
       44             #include "hpcg.hpp"
       45             
       46             #include "CG.hpp"
       47             #include "mytimer.hpp"
       48             #include "ComputeSPMV.hpp"
       49             #include "ComputeMG.hpp"
       50             #include "ComputeDotProduct.hpp"
       51             #include "ComputeWAXPBY.hpp"
       52             
       53             // Use TICK and TOCK to time a code section in MATLAB-like fashion
       54             #define TICK()  t0 = mytimer() //!< record current time in 't0'
       55             #define TOCK(t) t += mytimer() - t0 //!< store time difference in 't' using time in 't0'
       56             
       57             #include "likwid_instrumentation.hpp"
       58             
       59             /*!
       60               Routine to compute an approximate solution to Ax = b
       61             
       62               @param[in]    geom The description of the problem's geometry.
       63               @param[inout] A    The known system matrix
       64               @param[inout] data The data structure with all necessary CG vectors preallocated
       65               @param[in]    b    The known right hand side vector
       66               @param[inout] x    On entry: the initial guess; on exit: the new approximate solution
       67               @param[in]    max_iter  The maximum number of iterations to perform, even if tolerance is not met.
       68               @param[in]    tolerance The stopping criterion to assert convergence: if norm of residual is <= to tolerance.
       69               @param[out]   niters    The number of iterations actually performed.
       70               @param[out]   normr     The 2-norm of the residual vector after the last iteration.
       71               @param[out]   normr0    The 2-norm of the residual vector before the first iteration.
       72               @param[out]   times     The 7-element vector of the timing information accumulated during all of the iterations.
       73               @param[in]    doPreconditioning The flag to indicate whether the preconditioner should be invoked at each iteration.
       74             
       75               @return Returns zero on success and a non-zero value otherwise.
       76             
       77               @see CG_ref()
       78             */
       79             int CG(const SparseMatrix & A, CGData & data, const Vector & b, Vector & x,
       80                 const int max_iter, const double tolerance, int & niters, double & normr, double & normr0,
       81                 double * times, bool doPreconditioning, TraceData& trace) {
       82             
       83               double t_begin = mytimer();  // Start timing right away
       84               normr = 0.0;
       85               double rtz = 0.0, oldrtz = 0.0, alpha = 0.0, beta = 0.0, pAp = 0.0;
       86             
       87             
       88               double t0 = 0.0, t1 = 0.0, t2 = 0.0, t3 = 0.0, t4 = 0.0, t5 = 0.0;
       89             //#ifndef HPCG_NO_MPI
       90             //  double t6 = 0.0;
       91             //#endif
       92               local_int_t nrow = A.localNumberOfRows;
       93               Vector & r = data.r; // Residual vector
       94               Vector & z = data.z; // Preconditioned residual vector
       95               Vector & p = data.p; // Direction vector (in MPI mode ncol>=nrow)
       96               Vector & Ap = data.Ap;
       97             
       98               // Reorder vectors
       99               Vector rOrdered;
      100               Vector zOrdered;
      101               Vector xOrdered;
      102    i          InitializeVector(rOrdered, r.localLength);
      103    i          InitializeVector(zOrdered, z.localLength);
      104    i          InitializeVector(xOrdered, x.localLength);
      105    i          CopyAndReorderVector(r, rOrdered, A.whichNewRowIsOldRow);
      106    i          CopyAndReorderVector(z, zOrdered, A.whichNewRowIsOldRow);
      107    i          CopyAndReorderVector(x, xOrdered, A.whichNewRowIsOldRow);
      108             
      109             #ifdef CONVERGENCE_TEST
      110                 trace.convergence_list.clear();
      111             #endif
      112             
      113    i          if (!doPreconditioning && A.geom->rank==0) HPCG_fout << "WARNING: PERFORMING UNPRECONDITIONED ITERATIONS" << std::endl;
      114             
      115             #ifdef HPCG_DEBUG
      116               int print_freq = 1;
      117               if (print_freq>50) print_freq=50;
      118               if (print_freq<1)  print_freq=1;
      119             #endif
      120               // p is of length ncols, copy x to p for sparse MV operation
      121    i          CopyVector(xOrdered, p);
      122               TICK(); ComputeSPMV(A, p, Ap); TOCK(t3); // Ap = A*p
      123               TICK(); ComputeWAXPBY(nrow, 1.0, b, -1.0, Ap, rOrdered, A.isWaxpbyOptimized);  TOCK(t2); // r = b - Ax (x stored in p)
      124               TICK(); ComputeDotProduct(nrow, rOrdered, rOrdered, normr, t4, A.isDotProductOptimized); TOCK(t1);
      125               normr = sqrt(normr);
      126             #ifdef HPCG_DEBUG
      127               if (A.geom->rank==0) HPCG_fout << "Initial Residual = "<< normr << std::endl;
      128             #endif
      129             
      130               // Record initial residual for convergence testing
      131               normr0 = normr;
      132             
      133               // Start iterations
      134             
      135               for (int k=1; k<=max_iter && normr/normr0 > tolerance; k++ ) {
      136                 TICK();
      137                 if (doPreconditioning)
      138                   ComputeMG(A, rOrdered, zOrdered, trace); // Apply preconditioner
      139                 else
      140    i              CopyVector (rOrdered, zOrdered); // copy r to z (no preconditioning)
      141                 TOCK(t5); // Preconditioner apply time
      142             
      143                 if (k == 1) {
      144                   TICK(); ComputeWAXPBY(nrow, 1.0, zOrdered, 0.0, zOrdered, p, A.isWaxpbyOptimized); TOCK(t2); // Copy Mr to p
      145                   TICK(); ComputeDotProduct (nrow, rOrdered, zOrdered, rtz, t4, A.isDotProductOptimized); TOCK(t1); // rtz = r'*z
      146                 } else {
      147                   oldrtz = rtz;
      148                   TICK(); ComputeDotProduct (nrow, rOrdered, zOrdered, rtz, t4, A.isDotProductOptimized); TOCK(t1); // rtz = r'*z
      149                   beta = rtz/oldrtz;
      150                   TICK(); ComputeWAXPBY (nrow, 1.0, zOrdered, beta, p, p, A.isWaxpbyOptimized);  TOCK(t2); // p = beta*p + z
      151                 }
      152             
      153                 LIKWID_START(trace.enabled, "cg_spmv");
      154                 TICK(); ComputeSPMV(A, p, Ap); TOCK(t3); // Ap = A*p
      155                 LIKWID_STOP(trace.enabled, "cg_spmv");
      156                 TICK(); ComputeDotProduct(nrow, p, Ap, pAp, t4, A.isDotProductOptimized); TOCK(t1); // alpha = p'*Ap
      157                 alpha = rtz/pAp;
      158                 TICK(); ComputeWAXPBY(nrow, 1.0, xOrdered, alpha, p, xOrdered, A.isWaxpbyOptimized);// x = x + alpha*p
      159                         ComputeWAXPBY(nrow, 1.0, rOrdered, -alpha, Ap, rOrdered, A.isWaxpbyOptimized);  TOCK(t2);// r = r - alpha*Ap
      160                 TICK(); ComputeDotProduct(nrow, rOrdered, rOrdered, normr, t4, A.isDotProductOptimized); TOCK(t1);
      161                 normr = sqrt(normr);
      162             #ifdef CONVERGENCE_TEST
      163                     trace.convergence_list.push_back(normr/normr0);
      164             #endif
      165             #ifdef HPCG_DEBUG
      166                 if (A.geom->rank==0 && (k%print_freq == 0 || k == max_iter))
      167                   HPCG_fout << "Iteration = "<< k << "   Scaled Residual = "<< normr/normr0 << std::endl;
      168             #endif
      169                 niters = k;
      170               }
      171             
      172               // Reorder back vectors
      173    i          CopyAndReorderVector(rOrdered, r, A.whichOldRowIsNewRow);
      174    i          CopyAndReorderVector(zOrdered, z, A.whichOldRowIsNewRow);
      175    i          CopyAndReorderVector(xOrdered, x, A.whichOldRowIsNewRow);
      176    i          DeleteVector(rOrdered);
      177    i          DeleteVector(zOrdered);
      178    i          DeleteVector(xOrdered);
      179             
      180               // Store times
      181               times[1] += t1; // dot-product time
      182               times[2] += t2; // WAXPBY time
      183               times[3] += t3; // SPMV time
      184               times[4] += t4; // AllReduce time
      185               times[5] += t5; // preconditioner apply time
      186             //#ifndef HPCG_NO_MPI
      187             //  times[6] += t6; // exchange halo time
      188             //#endif
      189               times[0] += mytimer() - t_begin;  // Total time. All done...
      190               return 0;
      191             }
Total prefetch num: 0
Optimization messages
  jwd8101o-i  "../src/CG.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC1Ev'.
  jwd8101o-i  "../src/CG.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1EOS5_'.
  jwd8101o-i  "../src/CG.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEEC1EOS5_'.
  jwd8101o-i  "../src/CG.cpp", line 0: Inline expansion is applied to the user defined function '_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Emc'.
  jwd6208s-i  "../src/Vector.hpp", line 99: SIMD conversion is not applied to this loop because the uncertain order of the definition and reference to variable 'wv' may cause different results from serial execution.
  jwd8663o-i  "../src/Vector.hpp", line 99: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8101o-i  "../src/CG.cpp", line 102: Inline expansion is applied to the user defined function '_Z16InitializeVectorR13Vector_STRUCTi'.
  jwd8101o-i  "../src/CG.cpp", line 103: Inline expansion is applied to the user defined function '_Z16InitializeVectorR13Vector_STRUCTi'.
  jwd8101o-i  "../src/CG.cpp", line 104: Inline expansion is applied to the user defined function '_Z16InitializeVectorR13Vector_STRUCTi'.
  jwd8101o-i  "../src/CG.cpp", line 105: Inline expansion is applied to the user defined function '_Z20CopyAndReorderVectorRK13Vector_STRUCTRS_RKNSt3__16vectorIiNS3_9allocatorIiEEEE'.
  jwd8101o-i  "../src/CG.cpp", line 106: Inline expansion is applied to the user defined function '_Z20CopyAndReorderVectorRK13Vector_STRUCTRS_RKNSt3__16vectorIiNS3_9allocatorIiEEEE'.
  jwd8101o-i  "../src/CG.cpp", line 107: Inline expansion is applied to the user defined function '_Z20CopyAndReorderVectorRK13Vector_STRUCTRS_RKNSt3__16vectorIiNS3_9allocatorIiEEEE'.
  jwd6101s-i  "../src/Vector.hpp", line 108: SIMD conversion is not applied because a statement that prevents SIMD conversion exists.
  jwd8663o-i  "../src/Vector.hpp", line 108: This loop is not software pipelined because the software pipelining does not improve the performance.
  jwd8101o-i  "../src/Vector.hpp", line 109: Inline expansion is applied to the user defined function '_ZNKSt3__16vectorIiNS_9allocatorIiEEEixEm'.
  jwd8101o-i  "../src/CG.cpp", line 113: Inline expansion is applied to the user defined function '_ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc'.
  jwd8101o-i  "../src/CG.cpp", line 113: Inline expansion is applied to the user defined function '_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPFRS3_S4_E'.
  jwd8101o-i  "../src/CG.cpp", line 121: Inline expansion is applied to the user defined function '_Z10CopyVectorRK13Vector_STRUCTRS_'.
  jwd8101o-i  "../src/CG.cpp", line 140: Inline expansion is applied to the user defined function '_Z10CopyVectorRK13Vector_STRUCTRS_'.
  jwd8101o-i  "../src/CG.cpp", line 173: Inline expansion is applied to the user defined function '_Z20CopyAndReorderVectorRK13Vector_STRUCTRS_RKNSt3__16vectorIiNS3_9allocatorIiEEEE'.
  jwd8101o-i  "../src/CG.cpp", line 174: Inline expansion is applied to the user defined function '_Z20CopyAndReorderVectorRK13Vector_STRUCTRS_RKNSt3__16vectorIiNS3_9allocatorIiEEEE'.
  jwd8101o-i  "../src/CG.cpp", line 175: Inline expansion is applied to the user defined function '_Z20CopyAndReorderVectorRK13Vector_STRUCTRS_RKNSt3__16vectorIiNS3_9allocatorIiEEEE'.
  jwd8101o-i  "../src/CG.cpp", line 176: Inline expansion is applied to the user defined function '_Z12DeleteVectorR13Vector_STRUCT'.
  jwd8101o-i  "../src/CG.cpp", line 177: Inline expansion is applied to the user defined function '_Z12DeleteVectorR13Vector_STRUCT'.
  jwd8101o-i  "../src/CG.cpp", line 178: Inline expansion is applied to the user defined function '_Z12DeleteVectorR13Vector_STRUCT'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ios", line 589: Inline expansion is applied to the user defined function '_ZNSt3__18ios_base8setstateEj'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ios", line 696: Inline expansion is applied to the user defined function '_ZNKSt3__18ios_base5rdbufEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ios", line 734: Inline expansion is applied to the user defined function '_ZNSt3__19use_facetINS_5ctypeIcEEEERKT_RKNS_6localeE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ios", line 734: Inline expansion is applied to the user defined function '_ZNKSt3__15ctypeIcE5widenEc'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ios", line 742: Inline expansion is applied to the user defined function '_ZNSt3__111char_traitsIcE11eq_int_typeEii'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ios", line 743: Inline expansion is applied to the user defined function '_ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5widenEc'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 752: Inline expansion is applied to the user defined function '_ZNKSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentrycvbEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 755: Inline expansion is applied to the user defined function '_ZNSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEEC1ERNS_13basic_ostreamIcS2_EE'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 755: Inline expansion is applied to the user defined function '_ZNKSt3__18ios_base5flagsEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 755: Inline expansion is applied to the user defined function '_ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE4fillEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 755: Inline expansion is applied to the user defined function '_ZNKSt3__119ostreambuf_iteratorIcNS_11char_traitsIcEEE6failedEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 763: Inline expansion is applied to the user defined function '_ZNSt3__19basic_iosIcNS_11char_traitsIcEEE8setstateEj'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 894: Inline expansion is applied to the user defined function '_ZNSt3__111char_traitsIcE6lengthEPKc'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/iterator", line 925: Inline expansion is applied to the user defined function '_ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5rdbufEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 932: Inline expansion is applied to the user defined function '_ZNSt3__19addressofIKcEEPT_RS2_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/ostream", line 1034: Inline expansion is applied to the user defined function '_ZNKSt3__19basic_iosIcNS_11char_traitsIcEEE5widenEc'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1490: Inline expansion is applied to the user defined function '_ZNKSt3__18ios_base5widthEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1498: Inline expansion is applied to the user defined function '_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKcl'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1506: Inline expansion is applied to the user defined function '_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1Emc'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1507: Inline expansion is applied to the user defined function '_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4dataEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1507: Inline expansion is applied to the user defined function '_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKcl'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1516: Inline expansion is applied to the user defined function '_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEE5sputnEPKcl'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/locale", line 1522: Inline expansion is applied to the user defined function '_ZNSt3__18ios_base5widthEl'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1626: Inline expansion is applied to the user defined function '_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE13__get_pointerEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1626: Inline expansion is applied to the user defined function '_ZNSt3__116__to_raw_pointerIKcEEPT_S3_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1690: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1772: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1778: Inline expansion is applied to the user defined function '_ZNKSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1778: Inline expansion is applied to the user defined function '_ZNSt3__114pointer_traitsIPKcE10pointer_toERS1_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1784: Inline expansion is applied to the user defined function '_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9__is_longEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1784: Inline expansion is applied to the user defined function '_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE18__get_long_pointerEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1784: Inline expansion is applied to the user defined function '_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE19__get_short_pointerEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1789: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_E5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 1789: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairINS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE5__repES5_E5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 2106: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRNS_17__compressed_pairINS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE5__repES6_EEEEONS_16remove_referenceIT_E4typeEOSC_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 2106: Inline expansion is applied to the user defined function '_ZNSt3__14moveIRNS_17__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES6_EEEEONS_16remove_referenceIT_E4typeEOSC_'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 2107: Inline expansion is applied to the user defined function '_ZNSt3__112basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE6__zeroEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 2107: Inline expansion is applied to the user defined function '_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__zeroEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/string", line 2163: Inline expansion is applied to the user defined function '_ZNSt3__117__compressed_pairINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_EC1Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2414: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EEC2Ev'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIwNS_11char_traitsIwEENS_9allocatorIwEEE5__repES5_Lj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2469: Inline expansion is applied to the user defined function '_ZNSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EE5firstEv'.
  jwd8101o-i  "/opt/FJSVstclanga/cp-1.0.21.01/bin/../include/libc++/v371/memory", line 2470: Inline expansion is applied to the user defined function '_ZNKSt3__128__libcpp_compressed_pair_impINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE5__repES5_Lj2EE5firstEv'.
Statistics information
  Option information
    Command line options : -c -DHPCG_CONTIGUOUS_ARRAYS -DHPCG_NO_MPI -DENABLE_MG_COUNTERS -DHPCG_USE_SVE -DHPCG_MAN_OPT_DDOT -DDDOT_2_UNROLL -DWAXPBY_AUTO_OPT -HPCG_MAN_OPT_SCHEDULE_ON -DHPCG_MAN_OPT_SPMV_UNROLL -DSPMV_4_UNROLL -Khpctag -Kzfill -DUNROLLING_6_B -I./src -I./src/OOKAMI_OMP_FJ -Kfast -KSVE -Kopenmp -ffast-math -funroll-loops -std=c++11 -ffp-contract=fast -march=armv8.2-a+sve -Kocl -Koptmsg=2 -Nlst=t -I../src -o src/CG.o
    Effective options    : -g0 -mt -Qy -std=gnu++11 -x- -x=quick -O3 -Knoalias_const
                           -Kalign_loops -Knoarray_declaration_opt -Kassume=noshortloop
                           -Kassume=nomemory_bandwidth -Kassume=notime_saving_compilation
                           -Kcmodel=small -Keval -Keval_noconcurrent
                           -Knoextract_stride_store -Kfast_matmul -Knofenv_access
                           -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                           -Kilfunc=procedure -Klargepage -Klib -Kloop_blocking
                           -Kloop_fission -Kloop_nofission_stripmining
                           -Kloop_fission_threshold=50 -Kloop_fusion -Kloop_interchange
                           -Kloop_part_simd -Kloop_perfect_nest -Kloop_noversioning
                           -Klooptype=f -Knomemalias -Kmfunc=1 -Kocl -Komitfp -Kopenmp
                           -Kopenmp_noassume_norecurrence
                           -Kopenmp_nocollapse_except_innermost
                           -Kopenmp_loop_variable=private -Kopenmp_noordered_reduction
                           -Knoopenmp_simd -Knooptlib_string -Koptmsg=2
                           -Knopc_relative_literal_loads -Knoparallel
                           -Kparallel_nofp_precision -Knopreex -Kprefetch_cache_level=all
                           -Kprefetch_noconditional -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride -Kprefetch_strong
                           -Kprefetch_strong_L2 -Knopreload -Krdconv=1
                           -Kremove_inlinefunction -Knorestp -Ksch_post_ra -Ksch_pre_ra
                           -Ksibling_calls -Ksimd=auto -Ksimd_packed_promotion
                           -Ksimd_reduction_product -Ksimd_reg_size=512
                           -Ksimd_nouncounted_loop -Ksimd_use_multiple_structures
                           -Knostrict_aliasing -Knostriping -KA64FX -KARMV8_2_A -KSVE -Kswp
                           -Kswp_freg_rate=100 -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                           -Kswp_policy=auto -Kunroll -Knounroll_and_jam -Kzfill
                           -Ncancel_overtime_compilation -Nnocoverage -Nexceptions -Nnofjcex
                           -Nfjprof -Nnohook_func -Nnohook_time -Nlibomp -Nline -Nlst=p
                           -Nlst=t -Nquickdbg=noheapchk -Nquickdbg=nosubchk -NRnotrap
                           -Nnoreordered_variable_stack -Nrt_notune -Nsetvalue=noheap
                           -Nsetvalue=nostack -Nsetvalue=noscalar -Nsetvalue=noarray
                           -Nsetvalue=nostruct -Nsrc -Nsta
