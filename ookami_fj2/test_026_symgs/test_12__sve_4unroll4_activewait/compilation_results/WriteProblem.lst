Fujitsu C/C++ Version 4.7.0   Fri Dec 23 04:16:47 2022
Compilation information
  Current directory : /lustre/home/gapinzon/arm_code/HPCG_for_Arm/ookami_fj2
  Source file       : ../src/WriteProblem.cpp
(line-no.)(optimize)
        1             
        2             //@HEADER
        3             // ***************************************************
        4             //
        5             // HPCG: High Performance Conjugate Gradient Benchmark
        6             //
        7             // Contact:
        8             // Michael A. Heroux ( maherou@sandia.gov)
        9             // Jack Dongarra     (dongarra@eecs.utk.edu)
       10             // Piotr Luszczek    (luszczek@eecs.utk.edu)
       11             //
       12             // ***************************************************
       13             //@HEADER
       14             
       15             /*!
       16              @file WriteProblem.cpp
       17             
       18              HPCG routine
       19              */
       20             
       21             #include <cstdio>
       22             #include "WriteProblem.hpp"
       23             
       24             
       25             /*!
       26               Routine to dump:
       27                - matrix in row, col, val format for analysis with MATLAB
       28                - x, xexact, b as simple arrays of numbers.
       29             
       30                Writes to A.dat, x.dat, xexact.dat and b.dat, respectivly.
       31             
       32                NOTE:  THIS CODE ONLY WORKS ON SINGLE PROCESSOR RUNS
       33             
       34                Read into MATLAB using:
       35             
       36                    load A.dat
       37                    A=spconvert(A);
       38                    load x.dat
       39                    load xexact.dat
       40                    load b.dat
       41             
       42               @param[in] geom   The description of the problem's geometry.
       43               @param[in] A      The known system matrix
       44               @param[in] b      The known right hand side vector
       45               @param[in] x      The solution vector computed by CG iteration
       46               @param[in] xexact Generated exact solution
       47             
       48               @return Returns with -1 if used with more than one MPI process. Returns with 0 otherwise.
       49             
       50               @see GenerateProblem
       51             */
       52             int WriteProblem( const Geometry & geom, const SparseMatrix & A,
       53                 const Vector b, const Vector x, const Vector xexact) {
       54             
       55               if (geom.size!=1) return -1; //TODO Only works on one processor.  Need better error handler
       56               const global_int_t nrow = A.totalNumberOfRows;
       57             
       58               FILE * fA = 0, * fx = 0, * fxexact = 0, * fb = 0;
       59               fA = fopen("A.dat", "w");
       60               fx = fopen("x.dat", "w");
       61               fxexact = fopen("xexact.dat", "w");
       62               fb = fopen("b.dat", "w");
       63             
       64               if (! fA || ! fx || ! fxexact || ! fb) {
       65                 if (fb) fclose(fb);
       66                 if (fxexact) fclose(fxexact);
       67                 if (fx) fclose(fx);
       68                 if (fA) fclose(fA);
       69                 return -1;
       70               }
       71             
       72               for (global_int_t i=0; i< nrow; i++) {
       73                 const double * const currentRowValues = A.matrixValues[i];
       74                 const global_int_t * const currentRowIndices = A.mtxIndG[i];
       75                 const int currentNumberOfNonzeros = A.nonzerosInRow[i];
                       <<< Loop-information Start >>>
                       <<<  [OPTIMIZATION]
                       <<<    PREFETCH(HARD) Expected by compiler :
                       <<<      (unknown)
                       <<< Loop-information  End >>>
       76         2       for (int j=0; j< currentNumberOfNonzeros; j++)
       77             #ifdef HPCG_NO_LONG_LONG
       78                   fprintf(fA, " %d %d %22.16e\n",i+1,(global_int_t)(currentRowIndices[j]+1),currentRowValues[j]);
       79             #else
       80         2         fprintf(fA, " %lld %lld %22.16e\n",i+1,(global_int_t)(currentRowIndices[j]+1),currentRowValues[j]);
       81             #endif
       82                 fprintf(fx, "%22.16e\n",x.values[i]);
       83                 fprintf(fxexact, "%22.16e\n",xexact.values[i]);
       84                 fprintf(fb, "%22.16e\n",b.values[i]);
       85               }
       86             
       87               fclose(fA);
       88               fclose(fx);
       89               fclose(fxexact);
       90               fclose(fb);
       91               return 0;
       92             }
Total prefetch num: 0
Optimization messages
  jwd8664o-i  "../src/WriteProblem.cpp", line 76: This loop cannot be software pipelined because the loop contains an instruction, such as function call, which is not supported by software pipelining.
  jwd8202o-i  "../src/WriteProblem.cpp", line 76: Loop unrolling expanding 2 times is applied to this loop.
Statistics information
  Option information
    Command line options : -c -DHPCG_CONTIGUOUS_ARRAYS -DHPCG_NO_MPI -DENABLE_MG_COUNTERS -DENABLE_MG_COUNTERS -DHPCG_USE_SVE -I./src -I./src/OOKAMI_OMP_FJ -Kfast -KSVE -Kopenmp -Koptmsg=2 -Nlst=t -Kocl -I../src -o src/WriteProblem.o
    Effective options    : -g0 -mt -Qy -std=gnu++14 -x- -x=quick -O3 -Knoalias_const
                           -Kalign_loops -Knoarray_declaration_opt -Kassume=noshortloop
                           -Kassume=nomemory_bandwidth -Kassume=notime_saving_compilation
                           -Kcmodel=small -Keval -Keval_noconcurrent
                           -Knoextract_stride_store -Kfast_matmul -Knofenv_access
                           -Kfp_contract -Kfp_relaxed -Kfsimple -Kfz -Khpctag
                           -Kilfunc=procedure -Klargepage -Klib -Kloop_blocking
                           -Kloop_fission -Kloop_nofission_stripmining
                           -Kloop_fission_threshold=50 -Kloop_fusion -Kloop_interchange
                           -Kloop_part_simd -Kloop_perfect_nest -Kloop_noversioning
                           -Klooptype=f -Knomemalias -Kmfunc=1 -Kocl -Komitfp -Kopenmp
                           -Kopenmp_noassume_norecurrence
                           -Kopenmp_nocollapse_except_innermost
                           -Kopenmp_loop_variable=private -Kopenmp_noordered_reduction
                           -Knoopenmp_simd -Knooptlib_string -Koptmsg=2
                           -Knopc_relative_literal_loads -Knoparallel
                           -Kparallel_nofp_precision -Knopreex -Kprefetch_cache_level=all
                           -Kprefetch_noconditional -Kprefetch_noindirect -Kprefetch_noinfer
                           -Kprefetch_sequential=auto -Kprefetch_nostride -Kprefetch_strong
                           -Kprefetch_strong_L2 -Knopreload -Krdconv=1
                           -Kremove_inlinefunction -Knorestp -Ksch_post_ra -Ksch_pre_ra
                           -Ksibling_calls -Ksimd=auto -Ksimd_packed_promotion
                           -Ksimd_reduction_product -Ksimd_reg_size=512
                           -Ksimd_nouncounted_loop -Ksimd_use_multiple_structures
                           -Knostrict_aliasing -Knostriping -KA64FX -KARMV8_3_A -KSVE -Kswp
                           -Kswp_freg_rate=100 -Kswp_ireg_rate=100 -Kswp_preg_rate=100
                           -Kswp_policy=auto -Kunroll -Knounroll_and_jam -Knozfill
                           -Ncancel_overtime_compilation -Nnocoverage -Nexceptions -Nnofjcex
                           -Nfjprof -Nnohook_func -Nnohook_time -Nlibomp -Nline -Nlst=p
                           -Nlst=t -Nquickdbg=noheapchk -Nquickdbg=nosubchk -NRnotrap
                           -Nnoreordered_variable_stack -Nrt_notune -Nsetvalue=noheap
                           -Nsetvalue=nostack -Nsetvalue=noscalar -Nsetvalue=noarray
                           -Nsetvalue=nostruct -Nsrc -Nsta
