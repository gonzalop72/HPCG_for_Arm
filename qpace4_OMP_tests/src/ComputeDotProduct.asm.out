	.arch armv8.2-a+crc+sve
	.file	"ComputeDotProduct.cpp"
	.text
	.align	2
	.p2align 4,,11
	.type	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0, %function
_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0:
.LFB890:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	stp	x29, x30, [sp, -32]!
	.cfi_def_cfa_offset 32
	.cfi_offset 29, -32
	.cfi_offset 30, -24
	mov	x29, sp
	stp	x19, x20, [sp, 16]
	.cfi_offset 19, -16
	.cfi_offset 20, -8
	mov	x19, x0
	bl	omp_get_num_threads
	mov	w20, w0
	bl	omp_get_thread_num
	ldr	w4, [x19, 16]
	mov	w1, w0
	cntd	x2
	addpl	x0, x4, #1
	sub	w0, w0, #1
	sdiv	w0, w0, w2
	sdiv	w3, w0, w20
	msub	w0, w3, w20, w0
	cmp	w1, w0
	blt	.L2
.L6:
	madd	w1, w3, w1, w0
	movi	d1, #0
	add	w3, w3, w1
	cmp	w1, w3
	bge	.L3
	cntd	x0
	ptrue	p1.b, all
	ldr	x2, [x19]
	mul	w1, w1, w0
	mul	w3, w3, w0
	sbfiz	x0, x0, 3, 32
	add	x2, x2, x1, sxtw 3
	.p2align 3,,7
.L4:
	whilelt	p0.d, w1, w4
	incd	x1
	ld1d	z0.d, p0/z, [x2]
	add	x2, x2, x0
	mov	z2.d, z0.d
	movprfx	z2.d, p0/z, z2.d
	fmul	z2.d, p0/m, z2.d, z0.d
	faddv	d0, p1, z2.d
	fadd	d1, d1, d0
	cmp	w3, w1
	bgt	.L4
.L3:
	add	x0, x19, 8
	ldr	x1, [x0]
.L5:
	fmov	d0, x1
	mov	x2, x1
	fadd	d0, d1, d0
	fmov	x3, d0
	casal	x2, x3, [x0]
	cmp	x1, x2
	bne	.L13
	ldp	x19, x20, [sp, 16]
	ldp	x29, x30, [sp], 32
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret
	.p2align 2,,3
.L2:
	.cfi_restore_state
	add	w3, w3, 1
	mov	w0, 0
	b	.L6
.L13:
	mov	x1, x2
	b	.L5
	.cfi_endproc
.LFE890:
	.size	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0, .-_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0
	.align	2
	.p2align 4,,11
	.type	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1, %function
_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1:
.LFB891:
	.cfi_startproc
	.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
	stp	x29, x30, [sp, -32]!
	.cfi_def_cfa_offset 32
	.cfi_offset 29, -32
	.cfi_offset 30, -24
	mov	x29, sp
	stp	x19, x20, [sp, 16]
	.cfi_offset 19, -16
	.cfi_offset 20, -8
	mov	x19, x0
	bl	omp_get_num_threads
	mov	w20, w0
	bl	omp_get_thread_num
	ldr	w1, [x19, 24]
	mov	w2, w0
	cntd	x3
	addpl	x0, x1, #1
	sub	w0, w0, #1
	sdiv	w0, w0, w3
	sdiv	w3, w0, w20
	msub	w0, w3, w20, w0
	cmp	w2, w0
	blt	.L15
.L19:
	madd	w2, w3, w2, w0
	movi	d1, #0
	add	w3, w3, w2
	cmp	w2, w3
	bge	.L16
	cntd	x4
	sxtw	x0, w1
	ldp	x6, x5, [x19]
	ptrue	p1.b, all
	mul	w2, w2, w4
	mul	w3, w3, w4
	sxtw	x4, w4
	sxtw	x1, w2
	.p2align 3,,7
.L17:
	whilelo	p0.d, x1, x0
	incd	x2
	ld1d	z0.d, p0/z, [x6, x1, lsl 3]
	ld1d	z2.d, p0/z, [x5, x1, lsl 3]
	add	x1, x1, x4
	movprfx	z0.d, p0/z, z0.d
	fmul	z0.d, p0/m, z0.d, z2.d
	faddv	d0, p1, z0.d
	fadd	d1, d1, d0
	cmp	w3, w2
	bgt	.L17
.L16:
	add	x19, x19, 16
	ldr	x0, [x19]
.L18:
	fmov	d0, x0
	mov	x1, x0
	fadd	d0, d1, d0
	fmov	x2, d0
	casal	x1, x2, [x19]
	cmp	x0, x1
	bne	.L25
	ldp	x19, x20, [sp, 16]
	ldp	x29, x30, [sp], 32
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	ret
	.p2align 2,,3
.L15:
	.cfi_restore_state
	add	w3, w3, 1
	mov	w0, 0
	b	.L19
.L25:
	mov	x0, x1
	b	.L18
	.cfi_endproc
.LFE891:
	.size	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1, .-_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align	3
.LC0:
	.string	"int ComputeDotProduct(local_int_t, const Vector&, const Vector&, double&, double&, bool&)"
	.align	3
.LC1:
	.string	"../src/ComputeDotProduct.cpp"
	.align	3
.LC2:
	.string	"x.localLength >= n"
	.align	3
.LC3:
	.string	"y.localLength >= n"
	.text
	.align	2
	.p2align 4,,11
	.global	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb
	.type	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb, %function
_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb:
.LFB886:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	w4, w0
	mov	x29, sp
	ldr	w0, [x1]
	str	x19, [sp, 16]
	.cfi_offset 19, -48
	cmp	w0, w4
	blt	.L32
	ldr	w0, [x2]
	cmp	w0, w4
	blt	.L33
	ldr	x5, [x1, 8]
	mov	x19, x3
	ldr	x6, [x2, 8]
	cmp	x5, x6
	beq	.L34
	add	x1, sp, 32
	mov	w3, 0
	mov	w2, 0
	adrp	x0, _Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1
	add	x0, x0, :lo12:_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1
	stp	x5, x6, [sp, 32]
	str	xzr, [sp, 48]
	str	w4, [sp, 56]
	bl	GOMP_parallel
	ldr	d0, [sp, 48]
	mov	w0, 0
	str	d0, [x19]
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 64
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret
	.p2align 2,,3
.L34:
	.cfi_restore_state
	add	x1, sp, 32
	mov	w3, 0
	mov	w2, 0
	adrp	x0, _Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0
	add	x0, x0, :lo12:_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0
	stp	x5, xzr, [sp, 32]
	str	w4, [sp, 48]
	bl	GOMP_parallel
	ldr	d0, [sp, 40]
	mov	w0, 0
	str	d0, [x19]
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 64
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret
.L33:
	.cfi_restore_state
	adrp	x3, .LC0
	adrp	x1, .LC1
	adrp	x0, .LC3
	add	x3, x3, :lo12:.LC0
	add	x1, x1, :lo12:.LC1
	add	x0, x0, :lo12:.LC3
	mov	w2, 79
	bl	__assert_fail
.L32:
	adrp	x3, .LC0
	adrp	x1, .LC1
	adrp	x0, .LC2
	add	x3, x3, :lo12:.LC0
	add	x1, x1, :lo12:.LC1
	add	x0, x0, :lo12:.LC2
	mov	w2, 78
	bl	__assert_fail
	.cfi_endproc
.LFE886:
	.size	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb, .-_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb
	.hidden	DW.ref.__gxx_personality_v0
	.weak	DW.ref.__gxx_personality_v0
	.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
	.align	3
	.type	DW.ref.__gxx_personality_v0, %object
	.size	DW.ref.__gxx_personality_v0, 8
DW.ref.__gxx_personality_v0:
	.xword	__gxx_personality_v0
	.ident	"GCC: (GNU) 10.2.1 20201112 (Red Hat 10.2.1-8)"
	.section	.note.GNU-stack,"",@progbits
