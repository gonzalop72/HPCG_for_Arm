--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_init_4
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 87, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 117, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_critical
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_end_critical
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 27 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_init_4
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 87, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 117, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_critical
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_end_critical
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 27 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            inline
Name:            Inlined
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 87, Column: 9 }
Function:        .omp_outlined.
Args:
  - Callee:          _ZNSt6vectorIxSaIxEEixEm
    DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                       Line: 1044, Column: 0 }
  - String:          ' inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
  - String:          ' with '
  - String:          '(cost='
  - Cost:            '-35'
  - String:          ', threshold='
  - Threshold:       '787'
  - String:          ')'
  - String:          ' at callsite '
  - String:          .omp_outlined.
  - String:          ':'
  - Line:            '10'
  - String:          ':'
  - Column:          '9'
  - String:          ';'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 100, Column: 66 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            mul
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 100, Column: 66 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            mul
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 100, Column: 70 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 100, Column: 70 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            mul
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                       Line: 1046, Column: 25 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 98, Column: 17 }
Function:        .omp_outlined.
Args:
  - String:          'completely unrolled loop with '
  - UnrollCount:     '3'
  - String:          ' iterations'
...
--- !Passed
Pass:            loop-unroll
Name:            FullyUnrolled
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 96, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'completely unrolled loop with '
  - UnrollCount:     '3'
  - String:          ' iterations'
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 7 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 117, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Passed
Pass:            gvn
Name:            LoadPRE
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          load eliminated by PRE
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 117, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 22 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 22 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 25 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 26 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 29 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            select
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            add
...
--- !Passed
Pass:            licm
Name:            Hoisted
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            icmp
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 145, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 146, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 147, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 148, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 145, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 146, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 147, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 148, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - Callee:          __assert_fail
  - String:          ' will not be inlined into '
  - Caller:          _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 142, Column: 27 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 74, Column: 15 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 145, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 146, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 147, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 148, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 142, Column: 27 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 74, Column: 15 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 145, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 146, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 147, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 148, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Analysis
Pass:            sve-loop-vectorize
Name:            CFGNotUnderstood
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'loop not vectorized: '
  - String:          loop control flow is not understood by vectorizer
  - String:          ' (Reason = early exits)'
...
--- !Missed
Pass:            sve-loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          loop not vectorized
...
--- !Analysis
Pass:            loop-vectorize
Name:            NonReductionValueUsedOutsideLoop
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'loop not vectorized: '
  - String:          value that could not be identified as reduction is used outside the loop
...
--- !Analysis
Pass:            loop-vectorize
Name:            CantComputeNumberOfIterations
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'loop not vectorized: '
  - String:          could not determine number of loop iterations
...
--- !Missed
Pass:            loop-vectorize
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          loop not vectorized
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 79, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 117, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            '%struct.Vector_STRUCT*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'double*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i64
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     load
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 9 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '5'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '9'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '9'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '17'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '8'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '17'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '8'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '9'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '9'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 7 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 84, Column: 28 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 85, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 45 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 86, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: 'software/arm/22.1/gcc-11.2.0_Generic-AArch64_RHEL-8_aarch64-linux/lib/gcc/aarch64-linux-gnu/11.2.0/../../../../include/c++/11.2.0/bits/stl_vector.h', 
                   Line: 1046, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 92, Column: 42 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 93, Column: 49 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 119, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 13 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 82, Column: 26 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 80, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - NumStackBytes:   '288'
  - String:          ' stack bytes in function'
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 9 }
Function:        .omp_outlined.
Args:
  - NumReloads:      '1'
  - String:          ' reloads '
  - TotalReloadsCost: '7.378807e+03'
  - String:          ' total reloads cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 7 }
Function:        .omp_outlined.
Args:
  - NumSpills:       '2'
  - String:          ' spills '
  - TotalSpillsCost: '3.689714e+03'
  - String:          ' total spills cost '
  - NumReloads:      '23'
  - String:          ' reloads '
  - TotalReloadsCost: '4.588845e+04'
  - String:          ' total reloads cost '
  - NumVRCopies:     '5'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.223966e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 5 }
Function:        .omp_outlined.
Args:
  - NumSpills:       '8'
  - String:          ' spills '
  - TotalSpillsCost: '4.071106e+03'
  - String:          ' total spills cost '
  - NumReloads:      '29'
  - String:          ' reloads '
  - TotalReloadsCost: '4.626935e+04'
  - String:          ' total reloads cost '
  - NumVRCopies:     '5'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.223966e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            LoopSpillReloadCopies
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        .omp_outlined.
Args:
  - NumSpills:       '12'
  - String:          ' spills '
  - TotalSpillsCost: '4.083309e+03'
  - String:          ' total spills cost '
  - NumReloads:      '33'
  - String:          ' reloads '
  - TotalReloadsCost: '4.628305e+04'
  - String:          ' total reloads cost '
  - NumVRCopies:     '6'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.227017e+03'
  - String:          ' total copies cost '
  - String:          generated in loop
...
--- !Missed
Pass:            regalloc
Name:            SpillReloadCopies
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 1 }
Function:        .omp_outlined.
Args:
  - NumSpills:       '30'
  - String:          ' spills '
  - TotalSpillsCost: '4.092370e+03'
  - String:          ' total spills cost '
  - NumReloads:      '34'
  - String:          ' reloads '
  - TotalReloadsCost: '4.628337e+04'
  - String:          ' total reloads cost '
  - NumVRCopies:     '6'
  - String:          ' virtual registers copies '
  - TotalCopiesCost: '9.227017e+03'
  - String:          ' total copies cost '
  - String:          generated in function
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
Function:        .omp_outlined.
Args:
  - NumStackBytes:   '384'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 70, Column: 21 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 71, Column: 21 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 72, Column: 36 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '32'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 147, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 148, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 151, Column: 1 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 145, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 146, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 147, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 148, Column: 3 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 50, Column: 0 }
Function:        _Z12CheckProblemR19SparseMatrix_STRUCTP13Vector_STRUCTS2_S2_
Args:
  - NumInstructions: '114'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '18'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 27 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 125, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '10'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '31'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 81, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 83, Column: 7 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '12'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '19'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '71'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 94, Column: 34 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 95, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 95, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 97, Column: 29 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 0, Column: 0 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 99, Column: 33 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '1'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 101, Column: 25 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '20'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '5'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 122, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 107, Column: 21 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 105, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 102, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 103, Column: 23 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 87, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 115, Column: 9 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 121, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 120, Column: 24 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '8'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: '../src/CheckProblem.cpp', Line: 77, Column: 0 }
Function:        .omp_outlined.
Args:
  - NumInstructions: '540'
  - String:          ' instructions in function'
...
