--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_init_4
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 27 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_init_4
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 27 }
Function:        .omp_outlined.
Args:
  - Callee:          __kmpc_for_static_fini
  - String:          ' will not be inlined into '
  - Caller:          .omp_outlined.
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            getelementptr
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressCondExecuted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
Function:        .omp_outlined.
Args:
  - String:          failed to hoist load with loop-invariant address because load is conditionally executed
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 35 }
...
--- !Passed
Pass:            licm
Name:            Hoisted
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 63, Column: 19 }
Function:        .omp_outlined.
Args:
  - String:          'hoisting '
  - Inst:            load
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 63, Column: 19 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i32**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i32**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        _Z13SetupHalo_refR19SparseMatrix_STRUCT
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          _Z13SetupHalo_refR19SparseMatrix_STRUCT
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 49, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Missed
Pass:            inline
Name:            NoDefinition
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        _Z13SetupHalo_refR19SparseMatrix_STRUCT
Args:
  - Callee:          __kmpc_fork_call
  - String:          ' will not be inlined into '
  - Caller:          _Z13SetupHalo_refR19SparseMatrix_STRUCT
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 49, Column: 0 }
  - String:          ' because its definition is unavailable'
...
--- !Analysis
Pass:            sve-loop-vectorize
Name:            InterleavingNotBeneficial
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          the cost-model indicates that interleaving is not beneficial
...
--- !Passed
Pass:            sve-loop-vectorize
Name:            Vectorized
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          'vectorized loop (vectorization width: '
  - VectorizationFactor: vscale x 2
  - String:          ', interleaved count: '
  - InterleaveCount: '1'
  - String:          ')'
  - String:          '(runtime checks: '
  - RTNeeded:        no
  - String:          ')'
...
--- !Analysis
Pass:            loop-vectorize
Name:            AllDisabled
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          'loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized'
...
--- !Analysis
Pass:            loop-vectorize
Name:            AllDisabled
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          'loop not vectorized: vectorization and interleaving are explicitly disabled, or the loop has already been vectorized'
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i32**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i32**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            i32
  - String:          ' not eliminated'
  - String:          ' in favor of '
  - OtherAccess:     store
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 8 }
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i8*'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i32**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i32**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 49 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
...
--- !Missed
Pass:            gvn
Name:            LoadClobbered
Function:        .omp_outlined.
Args:
  - String:          'load of type '
  - Type:            'i64**'
  - String:          ' not eliminated'
  - String:          ' because it is clobbered by '
  - ClobberedBy:     call
    DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 49 }
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '9'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            slp-vectorizer
Name:            NotBeneficial
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 31 }
Function:        .omp_outlined.
Args:
  - String:          'List vectorization was possible but not beneficial with cost '
  - Cost:            '9'
  - String:          ' >= '
  - Treshold:        '0'
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 5 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            loop-unroll
Name:            MissedDetails
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          loop not unrolled
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Missed
Pass:            licm
Name:            LoadWithLoopInvariantAddressInvalidated
Function:        .omp_outlined.
Args:
  - String:          failed to move load with loop-invariant address because the loop may invalidate its value
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 49, Column: 0 }
Function:        _Z13SetupHalo_refR19SparseMatrix_STRUCT
Args:
  - NumStackBytes:   '48'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            prologepilog
Name:            StackSize
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 0 }
Function:        .omp_outlined.
Args:
  - NumStackBytes:   '96'
  - String:          ' stack bytes in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        _Z13SetupHalo_refR19SparseMatrix_STRUCT
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '22'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 49, Column: 0 }
Function:        _Z13SetupHalo_refR19SparseMatrix_STRUCT
Args:
  - NumInstructions: '22'
  - String:          ' instructions in function'
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '9'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '25'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 27 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 65, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '4'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 62, Column: 3 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '3'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 63, Column: 19 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '2'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '7'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionMix
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 64, Column: 51 }
Function:        .omp_outlined.
Args:
  - String:          'BasicBlock: '
  - BasicBlock:      ''
  - String:          "\n"
  - String:          ''
  - String:          ': '
  - INST_:           '6'
  - String:          "\n"
...
--- !Analysis
Pass:            asm-printer
Name:            InstructionCount
DebugLoc:        { File: '../src/SetupHalo_ref.cpp', Line: 60, Column: 0 }
Function:        .omp_outlined.
Args:
  - NumInstructions: '66'
  - String:          ' instructions in function'
...
