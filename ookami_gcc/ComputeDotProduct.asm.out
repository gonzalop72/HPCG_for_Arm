	.arch armv8.2-a+crc+sve
	.file	"ComputeDotProduct.cpp"
	.text
	.align	2
	.p2align 4,,11
	.type	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0, %function
_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0:
.LFB976:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	x29, sp
	stp	x19, x20, [sp, 16]
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	mov	x20, x0
	bl	omp_get_num_threads
	mov	w19, w0
	bl	omp_get_thread_num
	ldr	w3, [x20, 40]
	mov	w1, w0
	add	w2, w3, 6
	adds	w0, w3, 3
	csel	w4, w2, w0, mi
	asr	w5, w4, 2
	sdiv	w6, w5, w19
	msub	w7, w6, w19, w5
	cmp	w1, w7
	blt	.L2
.L5:
	mul	w8, w6, w1
	add	w9, w7, w8
	add	w10, w6, w9
	cmp	w9, w10
	bge	.L6
	ldr	x30, [x20]
	mov	z16.d, #0
	sxtw	x11, w7
	mov	z7.d, z16.d
	lsl	w12, w10, 2
	add	x13, x11, w8, sxtw
	sub	w14, w12, w9, lsl 2
	cntd	x3
	sub	w15, w14, #1
	add	x1, x30, x13, lsl 5
	mov	x19, x3
	cntb	x16, all, mul #4
	lsr	w17, w15, 2
	mov	z17.d, z16.d
	add	w18, w17, 1
	mov	z6.d, z16.d
	whilelo	p0.d, wzr, w18
	.p2align 3,,7
.L4:
	ld4d	{z0.d - z3.d}, p0/z, [x1]
	add	x1, x1, x16
	fmla	z6.d, p0/m, z0.d, z0.d
	fmla	z17.d, p0/m, z1.d, z1.d
	fmla	z7.d, p0/m, z2.d, z2.d
	fmla	z16.d, p0/m, z3.d, z3.d
	whilelo	p0.d, w3, w18
	add	x3, x3, x19
	b.any	.L4
	ptrue	p1.b, all
	faddv	d4, p1, z16.d
	faddv	d0, p1, z7.d
	faddv	d5, p1, z17.d
	faddv	d1, p1, z6.d
	ins	v4.d[1], v0.d[0]
	ins	v5.d[1], v1.d[0]
.L3:
	stp	q5, q4, [sp, 32]
	bl	GOMP_atomic_start
	ldr	q2, [x20, 8]
	ldr	q3, [x20, 24]
	ldp	q18, q19, [sp, 32]
	fadd	v20.2d, v2.2d, v19.2d
	fadd	v21.2d, v3.2d, v18.2d
	str	q20, [x20, 8]
	str	q21, [x20, 24]
	ldp	x19, x20, [sp, 16]
	ldp	x29, x30, [sp], 64
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	b	GOMP_atomic_end
	.p2align 2,,3
.L6:
	.cfi_restore_state
	movi	v5.2d, 0
	mov	v4.16b, v5.16b
	b	.L3
	.p2align 2,,3
.L2:
	add	w6, w6, 1
	mov	w7, 0
	b	.L5
	.cfi_endproc
.LFE976:
	.size	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0, .-_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0
	.align	2
	.p2align 4,,11
	.type	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1, %function
_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1:
.LFB977:
	.cfi_startproc
	stp	x29, x30, [sp, -64]!
	.cfi_def_cfa_offset 64
	.cfi_offset 29, -64
	.cfi_offset 30, -56
	mov	x29, sp
	stp	x19, x20, [sp, 16]
	.cfi_offset 19, -48
	.cfi_offset 20, -40
	mov	x20, x0
	bl	omp_get_num_threads
	mov	w19, w0
	bl	omp_get_thread_num
	ldr	w3, [x20, 48]
	mov	w1, w0
	add	w2, w3, 6
	adds	w0, w3, 3
	csel	w4, w2, w0, mi
	asr	w5, w4, 2
	sdiv	w6, w5, w19
	msub	w7, w6, w19, w5
	cmp	w1, w7
	blt	.L11
.L14:
	mul	w8, w6, w1
	add	w9, w7, w8
	add	w10, w6, w9
	cmp	w9, w10
	bge	.L15
	ldp	x19, x1, [x20]
	mov	z20.d, #0
	sxtw	x11, w7
	mov	z19.d, z20.d
	add	x13, x11, w8, sxtw
	lsl	w12, w10, 2
	sub	w14, w12, w9, lsl 2
	cntd	x2
	lsl	x15, x13, 5
	sub	w16, w14, #1
	mov	x5, x2
	cnth	x17
	add	x4, x19, x15
	add	x0, x1, x15
	mov	x3, 0
	lsr	w18, w16, 2
	add	w30, w18, 1
	mov	z21.d, z20.d
	mov	z18.d, z20.d
	whilelo	p0.d, wzr, w30
	.p2align 3,,7
.L13:
	ld4d	{z4.d - z7.d}, p0/z, [x4, x3, lsl 3]
	ld4d	{z0.d - z3.d}, p0/z, [x0, x3, lsl 3]
	add	x3, x3, x17
	fmla	z18.d, p0/m, z0.d, z4.d
	fmla	z21.d, p0/m, z1.d, z5.d
	fmla	z19.d, p0/m, z2.d, z6.d
	fmla	z20.d, p0/m, z3.d, z7.d
	whilelo	p0.d, w2, w30
	add	x2, x2, x5
	b.any	.L13
	ptrue	p1.b, all
	faddv	d16, p1, z20.d
	faddv	d0, p1, z19.d
	faddv	d17, p1, z21.d
	faddv	d1, p1, z18.d
	ins	v16.d[1], v0.d[0]
	ins	v17.d[1], v1.d[0]
.L12:
	stp	q17, q16, [sp, 32]
	bl	GOMP_atomic_start
	ldp	q2, q3, [x20, 16]
	ldp	q4, q5, [sp, 32]
	fadd	v6.2d, v2.2d, v5.2d
	fadd	v7.2d, v3.2d, v4.2d
	stp	q6, q7, [x20, 16]
	ldp	x19, x20, [sp, 16]
	ldp	x29, x30, [sp], 64
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_restore 20
	.cfi_def_cfa_offset 0
	b	GOMP_atomic_end
	.p2align 2,,3
.L15:
	.cfi_restore_state
	movi	v17.2d, 0
	mov	v16.16b, v17.16b
	b	.L12
	.p2align 2,,3
.L11:
	add	w6, w6, 1
	mov	w7, 0
	b	.L14
	.cfi_endproc
.LFE977:
	.size	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1, .-_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1
	.section	.rodata.str1.8,"aMS",@progbits,1
	.align	3
.LC0:
	.string	"int ComputeDotProduct(local_int_t, const Vector&, const Vector&, double&, double&, bool&)"
	.align	3
.LC1:
	.string	"../src/ComputeDotProduct.cpp"
	.align	3
.LC2:
	.string	"x.localLength >= n"
	.align	3
.LC3:
	.string	"y.localLength >= n"
	.text
	.align	2
	.p2align 4,,11
	.global	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb
	.type	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb, %function
_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb:
.LFB972:
	.cfi_startproc
	stp	x29, x30, [sp, -96]!
	.cfi_def_cfa_offset 96
	.cfi_offset 29, -96
	.cfi_offset 30, -88
	mov	w4, w0
	mov	x29, sp
	ldr	w0, [x1]
	str	x19, [sp, 16]
	.cfi_offset 19, -80
	cmp	w0, w4
	blt	.L24
	ldr	w6, [x2]
	cmp	w6, w4
	blt	.L25
	ldr	x9, [x1, 8]
	mov	x19, x3
	ldr	x10, [x2, 8]
	movi	v0.2d, 0
	cmp	x9, x10
	beq	.L26
	adrp	x11, _Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1
	add	x1, sp, 32
	add	x0, x11, :lo12:_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.1
	mov	w3, 0
	mov	w2, 0
	stp	x9, x10, [sp, 32]
	stp	q0, q0, [sp, 48]
	str	w4, [sp, 80]
	bl	GOMP_parallel
	ldp	q2, q1, [sp, 48]
	mov	w0, 0
	fadd	v3.2d, v2.2d, v1.2d
	faddp	d4, v3.2d
	str	d4, [x19]
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 96
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret
	.p2align 2,,3
.L26:
	.cfi_restore_state
	adrp	x12, _Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0
	add	x1, sp, 32
	add	x0, x12, :lo12:_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb._omp_fn.0
	mov	w3, 0
	mov	w2, 0
	str	x9, [sp, 32]
	str	q0, [sp, 40]
	str	q0, [sp, 56]
	str	w4, [sp, 72]
	bl	GOMP_parallel
	ldr	q5, [sp, 40]
	mov	w0, 0
	ldr	q6, [sp, 56]
	fadd	v7.2d, v5.2d, v6.2d
	faddp	d4, v7.2d
	str	d4, [x19]
	ldr	x19, [sp, 16]
	ldp	x29, x30, [sp], 96
	.cfi_remember_state
	.cfi_restore 30
	.cfi_restore 29
	.cfi_restore 19
	.cfi_def_cfa_offset 0
	ret
.L25:
	.cfi_restore_state
	adrp	x7, .LC1
	adrp	x8, .LC3
	adrp	x2, .LC0
	add	x1, x7, :lo12:.LC1
	add	x3, x2, :lo12:.LC0
	add	x0, x8, :lo12:.LC3
	mov	w2, 79
	bl	__assert_fail
.L24:
	adrp	x5, .LC2
	adrp	x3, .LC0
	adrp	x1, .LC1
	add	x3, x3, :lo12:.LC0
	add	x1, x1, :lo12:.LC1
	add	x0, x5, :lo12:.LC2
	mov	w2, 78
	bl	__assert_fail
	.cfi_endproc
.LFE972:
	.size	_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb, .-_Z17ComputeDotProductiRK13Vector_STRUCTS1_RdS2_Rb
	.ident	"GCC: (GNU) 12.2.0"
	.section	.note.GNU-stack,"",@progbits
