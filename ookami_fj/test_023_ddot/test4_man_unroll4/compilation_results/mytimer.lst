Fujitsu C/C++ Version 4.7.0   Wed Nov  9 16:12:55 2022
Compilation information
  Current directory : /lustre/home/gapinzon/arm_code/HPCG_for_Arm/ookami_fj
  Source file       : ../src/mytimer.cpp
(line-no.)(optimize)
        1             
        2             //@HEADER
        3             // ***************************************************
        4             //
        5             // HPCG: High Performance Conjugate Gradient Benchmark
        6             //
        7             // Contact:
        8             // Michael A. Heroux ( maherou@sandia.gov)
        9             // Jack Dongarra     (dongarra@eecs.utk.edu)
       10             // Piotr Luszczek    (luszczek@eecs.utk.edu)
       11             //
       12             // ***************************************************
       13             //@HEADER
       14             
       15             /////////////////////////////////////////////////////////////////////////
       16             
       17             // Function to return time in seconds.
       18             // If compiled with no flags, return CPU time (user and system).
       19             // If compiled with -DWALL, returns elapsed time.
       20             
       21             /////////////////////////////////////////////////////////////////////////
       22             
       23             #ifndef HPCG_NO_MPI
       24             #include <mpi.h>
       25             
       26             double mytimer(void) {
       27               return MPI_Wtime();
       28             }
       29             
       30             #elif !defined(HPCG_NO_OPENMP)
       31             
       32             // If this routine is compiled with HPCG_NO_MPI defined and not compiled with HPCG_NO_OPENMP then use the OpenMP timer
       33             #include <omp.h>
       34             double mytimer(void) {
       35               return omp_get_wtime();
       36             }
       37             #else
       38             
       39             #include <cstdlib>
       40             #include <sys/time.h>
       41             #include <sys/resource.h>
       42             double mytimer(void) {
       43               struct timeval tp;
       44               static long start=0, startu;
       45               if (!start) {
       46                 gettimeofday(&tp, NULL);
       47                 start = tp.tv_sec;
       48                 startu = tp.tv_usec;
       49                 return 0.0;
       50               }
       51               gettimeofday(&tp, NULL);
       52               return ((double) (tp.tv_sec - start)) + (tp.tv_usec-startu)/1000000.0 ;
       53             }
       54             
       55             #endif
