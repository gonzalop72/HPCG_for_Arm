Fujitsu C/C++ Version 4.7.0   Wed Nov  2 16:22:57 2022
Compilation information
  Current directory : /lustre/home/gapinzon/arm_code/HPCG_for_Arm/ookami_fj
  Source file       : ../src/CheckAspectRatio.cpp
(line-no.)(optimize)
        1             //@HEADER
        2             // ***************************************************
        3             //
        4             // HPCG: High Performance Conjugate Gradient Benchmark
        5             //
        6             // Contact:
        7             // Michael A. Heroux ( maherou@sandia.gov)
        8             // Jack Dongarra     (dongarra@eecs.utk.edu)
        9             // Piotr Luszczek    (luszczek@eecs.utk.edu)
       10             //
       11             // ***************************************************
       12             //@HEADER
       13             
       14             /*!
       15              @file CheckAspectRatio.cpp
       16             
       17              HPCG routine
       18              */
       19             
       20             #include <algorithm>
       21             
       22             #ifndef HPCG_NO_MPI
       23             #include <mpi.h>
       24             #endif
       25             
       26             #include "hpcg.hpp"
       27             
       28             #include "CheckAspectRatio.hpp"
       29             
       30             int
       31             CheckAspectRatio(double smallest_ratio, int x, int y, int z, const char *what, bool DoIo) {
       32    i          double current_ratio = std::min(std::min(x, y), z) / double(std::max(std::max(x, y), z));
       33             
       34               if (current_ratio < smallest_ratio) { // ratio of the smallest to the largest
       35                 if (DoIo) {
       36    i              HPCG_fout << "The " << what << " sizes (" << x << "," << y << "," << z <<
       37    i                ") are invalid because the ratio min(x,y,z)/max(x,y,z)=" << current_ratio <<
       38    i                " is too small (at least " << smallest_ratio << " is required)." << std::endl;
       39    i              HPCG_fout << "The shape should resemble a 3D cube. Please adjust and try again." << std::endl;
       40                   HPCG_fout.flush();
       41                 }
       42             
       43             #ifndef HPCG_NO_MPI
       44                 MPI_Abort(MPI_COMM_WORLD, 127);
       45             #endif
       46             
       47                 return 127;
       48               }
       49             
       50               return 0;
       51             }
